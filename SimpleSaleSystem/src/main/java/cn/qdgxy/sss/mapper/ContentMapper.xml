<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qdgxy.sss.mapper.ContentMapper">
    <resultMap id="BaseResultMap" type="cn.qdgxy.sss.po.Content">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="price" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="abstract" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="cn.qdgxy.sss.po.ContentWithBLOBs">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="price" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="abstract" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="icon" javaType="_byte[]" jdbcType="LONGVARBINARY"/>
            <arg column="text" javaType="_byte[]" jdbcType="LONGVARBINARY"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, price, title, abstract
  </sql>
    <sql id="Blob_Column_List">
        icon, text
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="cn.qdgxy.sss.po.ContentExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from content
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="cn.qdgxy.sss.po.ContentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from content
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from content
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from content
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.qdgxy.sss.po.ContentExample">
        delete from content
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.qdgxy.sss.po.ContentWithBLOBs">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into content (price, title, abstract,
        icon, text)
        values (#{price,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{digest,jdbcType=VARCHAR},
        #{icon,jdbcType=LONGVARBINARY}, #{text,jdbcType=LONGVARBINARY})
    </insert>
    <insert id="insertSelective" parameterType="cn.qdgxy.sss.po.ContentWithBLOBs">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into content
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="price != null">
                price,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="digest != null">
                abstract,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="text != null">
                text,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="price != null">
                #{price,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="digest != null">
                #{digest,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=LONGVARBINARY},
            </if>
            <if test="text != null">
                #{text,jdbcType=LONGVARBINARY},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.qdgxy.sss.po.ContentExample" resultType="java.lang.Long">
        select count(*) from content
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update content
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=BIGINT},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.digest != null">
                abstract = #{record.digest,jdbcType=VARCHAR},
            </if>
            <if test="record.icon != null">
                icon = #{record.icon,jdbcType=LONGVARBINARY},
            </if>
            <if test="record.text != null">
                text = #{record.text,jdbcType=LONGVARBINARY},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update content
        set id = #{record.id,jdbcType=INTEGER},
        price = #{record.price,jdbcType=BIGINT},
        title = #{record.title,jdbcType=VARCHAR},
        abstract = #{record.digest,jdbcType=VARCHAR},
        icon = #{record.icon,jdbcType=LONGVARBINARY},
        text = #{record.text,jdbcType=LONGVARBINARY}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update content
        set id = #{record.id,jdbcType=INTEGER},
        price = #{record.price,jdbcType=BIGINT},
        title = #{record.title,jdbcType=VARCHAR},
        abstract = #{record.digest,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.qdgxy.sss.po.ContentWithBLOBs">
        update content
        <set>
            <if test="price != null">
                price = #{price,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="digest != null">
                abstract = #{digest,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=LONGVARBINARY},
            </if>
            <if test="text != null">
                text = #{text,jdbcType=LONGVARBINARY},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.qdgxy.sss.po.ContentWithBLOBs">
        update content
        set price = #{price,jdbcType=BIGINT},
        title = #{title,jdbcType=VARCHAR},
        abstract = #{digest,jdbcType=VARCHAR},
        icon = #{icon,jdbcType=LONGVARBINARY},
        text = #{text,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="cn.qdgxy.sss.po.Content">
        update content
        set price = #{price,jdbcType=BIGINT},
        title = #{title,jdbcType=VARCHAR},
        abstract = #{digest,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>