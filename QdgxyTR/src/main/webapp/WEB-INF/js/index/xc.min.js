// Administration Module.

if ( !window.console ) {
    window.console = {};
    window.console.log = function (){};
    window.console.dir = function(){};
}
 var resizeW = $(window).width();
 var resizeH = $(window).height();
// 行测版块
xc = {};
xc.module = {};


xc.module.smart_exercise = {};
// 行测 - 智能推送：开始
xc.module.smart_exercise.begin = function (){
    var type = 1;                               // 1:智能推送，2：专项练习
    loading.show('正在为您组卷');
    var url = urllib.build('Administration:chouti',{rnd:Math.random()});
    var data = {type:type};
    var callback = function (){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data && res_data.status==1 && res_data.exam_id) {
                loading.show('跳转至答题页面...');
                var url = urllib.build('Administration:answer',{exam_id:res_data.exam_id});
                window.location.href = url;
            }else {
                if (res_data.info) {
                    if ( window.dialog != undefined && window.dialog.login_msg != undefined ){
                        var msg = window.dialog.login_msg;
                    } else {
                        var msg = res_data.info;
                    }
                    var css = {};
                    css.top = ($(window).height()/2-140) + "px";
                    css.left = ($(window).width()/2 -237) + "px";
                    css.backgroundColor = "none";
                    css.position = "fixed";
                    try{
                        console.log(msg);
                    }catch (e){

                    }
                    $.blockUI({ message: $(msg), css: css });

                } else setalert('组卷失败，请稍后再试！');
            }
        }else setalert('网络错误！');
    };

    $.post(url,data).always(callback);
};

xc.module.special_exercise = {};
// 行测 - 考点直击：开始（弹出知识点列表）
xc.module.special_exercise.show_knowledges = function(){
    var url = urllib.build('Administration:get_knowledges',{rnd:Math.random()});
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data && res_data.status == 1){
                $('body,html').animate({scrollTop:0},200);
                $.blockUI({message: $(res_data.html),css: {backgroundColor: 'none',top:  (resizeH/2 - 220) + 'px',left: (resizeW/2 - 300) + 'px',width : '600px',border: 'none',position : 'absolute'} });
            }else setalert(res_data.info||res_data.msg);
        }else setalert('网络错误！');
    };

    $.get(url).always(callback);
};

// 打开树结构
xc.module.special_exercise.dir = function(obj,knowledge_id){
    if ($(obj).hasClass('add')) {
        $(obj).addClass('cut').removeClass('add');
        $('#pointBox #tree_'+knowledge_id).show();
    } else {
        $(obj).addClass('add').removeClass('cut');
        $('#pointBox #tree_'+knowledge_id).hide();
    }
};

// 行测 - 考点直击：选择知识点
xc.module.special_exercise.begin = function(knowledge_id){
    if (!knowledge_id) throw '错误：专项练习 抽卷 无知识点编号.';
    var type = 2;   var data = {type:type, knowledge_id:knowledge_id};
    var url = urllib.build('Administration/chouti',{rnd:Math.random()});

    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            console.log(res_data);
            if (res_data && res_data.status==1 && res_data.exam_id) {
                loading.show('跳转至答题页面...');
                var url = urllib.build('Administration/answer',{exam_id:res_data.exam_id});
                window.location.href = url;
            }else {
                if (res_data.info){
                        if(res_data.info=='接口没有数据返回！'){
                             setalert('该模块题目数量不足!'); return false;
                        }
                    $.blockUI({message:window.dialog.login_msg,css:{top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                }else setalert( '组卷失败，请稍后再试');
            }
        }else setalert('网络错误！');
    };

    $.post(url,data).always(callback);

};

// 行测 - 竞技练习
xc.module.challenge_exercise = {};
// 行测 - 竞技练习：开始
xc.module.challenge_exercise.begin = function(){
    var url = urllib.build('challenge/contest');
    window.lcoation.href = url;
};


xc.module.zhenti_exercise = {};
// 行测 - 真题演练：开始
xc.module.zhenti_exercise.select_paper = function(url,re_click){
    if (!re_click){var re_click = 0;}
    else var re_click =1;

    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];

            if (int(re_click) ==1){
                // 更新内容
                $('#paseexam').html(res_data);
                $('body,html').animate({scrollTop:0},200);
            }else if (int(re_click) ==0){
                // 显示内容
                $('#paseexam').html(res_data);
                $('body,html').animate({scrollTop:0},200);
                $.blockUI({message : $('#paseexam'),css : {width : '600px',height : '400px',top:  (resizeH/2 - 280) + 'px',left: (resizeW/2 - 300) + 'px',backgroundColor : 'none',position : 'absolute'}});
            }

        }else setalert('网络错误！');
    };

     $.get(url).always(callback);
};

// 行测 - 真题演练：抽题
xc.module.zhenti_exercise.begin = function(paper_id, area_id, year){
    if ( !area_id ) var area_id = -999;
    if ( !year ) var year = 1984;

    loading.show('正在为您抽取试卷...');           //xc.module.zhenti_exercise.begin
    var url = urllib.build('Administration/really_chouti',{'paper_id':paper_id, 'area_id':area_id, 'year':year, rnd:Math.random()});
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1) {
                loading.show(res_data.info || res_data.msg);
                window.location.href = urllib.build('Administration:really_answer',{exam_id:res_data.exam_id,paper_id:paper_id });
            }else if (res_data.status == 0){
                if (res_data.info) $.blockUI({message:window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                else setalert('组卷失败！');
            }
        }else setalert('网络错误！');
    };

    $.get(url).always(callback);
};

xc.module.mock_exercise = {};
// 行测 - 模考组卷：开始
xc.module.mock_exercise.begin = function(){
    loading.show('正在为您组卷...');
    var url = urllib.build('Administration/mock_exam_chouti');
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data && res_data.status == 1) {
                setalert('组卷成功！');
                window.location.href= res_data.url;
            }else {
                if (res_data.info) $.blockUI({message:window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                else setalert('组卷失败！');
            }
        }else {
            setalert('网络错误！');
        }
    };

    $.get(url).always(callback);
};

// 行测 - 试题搜索
xc.module.search = {};
xc.module.search.begin = function(obj){
    if (window.location.mod=='administration' && window.location.act=='index'){
        // 行测 - 首页
        var keywords = $('#question_search').parent().find("input").val();
        if ( keywords.length > 30 ) {
            keywords = keywords.substr(0, 30);
        }
        if ( keywords.length < 2 ) {
            setalert("请输入最少两个关键词");
            return false;
        }
        if (keywords == '' || keywords == " ") var url = urllib.build('Administration/search');
        else var url = urllib.build('Administration/search',{keywords:urllib.quote(keywords) });

        window.location.href=url;
    }else if (window.location.mod=='administration' && window.location.act=='search'){
        // 行测 - 搜索
        var keywords = $('#question_search').val();
        if ( keywords.length < 2 ) {
            setalert("请输入最少两个关键词");
            return false;
        }
        if (keywords.length == 0 || keywords.length == null){setalert("请输入关键词！"); return false;}
        else{
            keywords = urllib.quote(keywords);
            var search_type = $(".search_type span[class='active']").attr('search_type');  // 1:普通题 2:材料题
            var api_type = $(".api_type span[class='active']").attr("api_type");                   // 1:匹配 2:分词
            if (parseInt(search_type) !== 1 && parseInt(search_type) !== 2) var search_type = 1;
            if (Number(api_type) !== 1 && Number(api_type) !== 2) var api_type = 1;
            var url = urllib.build('Administration/search',{keywords:keywords,'type':search_type,'api_type':api_type});
            window.location.href=url;
        }
    }
};

xc.module.search.event_handle = function(obj,e){
    var e = e || window.event;
    if(e.keyCode == 13) xc.module.search.begin(obj);
};


// 行测 - 精确估分
xc.module.assessment_score = {};
// 行测 - 精确估分：选择试卷
xc.module.assessment_score.select_paper = function(url,re_click,area_id){
    if (!re_click) var re_click=0;
    else var re_click = 1;
    //if (!area_id) var area_id = -1;
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data == null || res_data == ''){
                setalert('暂无数据！'); return false;
            }
            if (res_data.info) {
                $.blockUI({message:window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                return false;
            }
            switch(re_click){
                case 1:
                    $('#paseexam').html(res_data);
                    $('body,html').animate({scrollTop:0},200);
                    break;
                case 0:
                    $('#paseexam').html(res_data);
                    $('body,html').animate({scrollTop:0},200);
                    $.blockUI({message : $('#paseexam'),css : {width : '600px',height : '400px',top:  (resizeH/2 - 280) + 'px',left: (resizeW/2 - 300) + 'px',backgroundColor : 'none',position : 'absolute'}});
                    break;
            }
        }else {
            if (res_data.info) $.blockUI({message:window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
            else setalert('试卷列表获取失败！');
        }
    };
    $.get(url).always(callback);

};

// 行测 - 精确估分：开始
xc.module.assessment_score.begin = function (code,paper_id){
    var url = urllib.build('Administration:score_check',{code:code,paper_id:paper_id});
    window.location.href = url;
};

/*
xc.module.assessment_score.report = function(code,paper_id){
    var url = urllib.build('Administration/score_check',{'code':code,'paper_id':paper_id});
    window.location.href = url;
}

*/

// 曝志愿
xc.module.assessment_wishes = {};
// 行测 - 志愿评估（曝志愿）：开始
xc.module.assessment_wishes.begin = function (){
    var url = urllib.build('Myjob/index');
    window.location.href = url;
};

// 定期模考
xc.module.timing_mock_exercise = {};
// 行测 - 定期模考：选择试卷
xc.module.timing_mock_exercise.select_paper = function(){
    var url = urllib.build('Administration/timing_select_paper');
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
              console.log(res_data);
            if (parseInt(res_data.status) != 1){
                if (res_data.info){

                    $.blockUI({message:window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                }else setalert("获取试卷列表失败！");
                return false;
            }
            $('body,html').animate({scrollTop:0},200);
            if (res_data.html == null){ setalert("暂无试卷数据！");return; }
            $.blockUI({message : $(res_data.html),css : {width : '700px',height : '600px',backgroundColor : 'none',top:  (resizeH/2-250) + 'px',left: (resizeW/2-350) + 'px',position : 'absolute'} });
        }else setalert('网络错误！');
    };

    $.get(url).always(callback);
};

// 行测 - 万人模考（临时）
xc.module.timing_mock_exercise.select_paper2 = function(page){
    if (!page) var url = urllib.build('Administration/timing_2');
    else var url = urllib.build('Administration/timing_2', {'page': page} );
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (parseInt(res_data.status) != 1){
                if (res_data.info) {
                    $.blockUI({message: window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                    $.blockUI({message: window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                    return false;
                }else setalert("获取试卷列表失败！");
            }
            if (res_data.html == null){  setalert("暂无试卷数据！");return;}
            if (!page) {
                $('body,html').animate({scrollTop:0},200);
                $.blockUI({ message : $(res_data.html),css : {width : '700px',height : '600px',backgroundColor : 'none',top:  (resizeH/2-250) + 'px',left: (resizeW/2-350) + 'px',position : 'absolute'} });
            }else{
                $('.timingLi').empty();
                $('.timingLi').append(res_data.html);
                $('.AllQ .page').empty();
                $('.AllQ .page').append(res_data.page_html);
            }
        }else setalert('网络错误！');
    };

    $.get(url).always(callback);
};

// 行测 - 万人模考（临时）  首先使用这个
xc.module.timing_mock_exercise.select_paper20 = function(page){
    if (!page) var url = urllib.build('Administration/timing_20');
    else var url = urllib.build('Administration/timing_20', {'page': page} );
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            console.log(res_data);
            if (parseInt(res_data.status) != 1){
                if (res_data.info) {
                    $.blockUI({message: window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                    $.blockUI({message: window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                    return false;
                }else setalert("获取试卷列表失败！");
            }
            if (res_data.html == null){  setalert("暂无试卷数据！");return;}
            if (!page) {
                $('body,html').animate({scrollTop:0},200);
                $.blockUI({ message : $(res_data.html),css : {width : '700px',height : '600px',backgroundColor : 'none',top:  (resizeH/2-250) + 'px',left: (resizeW/2-350) + 'px',position : 'absolute'} });
            }else{
                $('.timingLi').empty();
                $('.timingLi').append(res_data.html);
                $('.AllQ .page').empty();
                $('.AllQ .page').append(res_data.page_html);
            }
        }else setalert('网络错误！');
    };

    $.get(url).always(callback);
};

// 行测 - 定期模考：获取试卷（根据地区编号等参数）
xc.module.timing_mock_exercise.get_papers = function(page,area_id){
    if (!page){var page = 1;};
    var url = urllib.build('Administration/timing_get_papers', {'page':page} );
    if (area_id) var url = url +  "&area_id=" + area_id;
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            var status = parseInt(res_data.status);
            if (status == 1){
                // 设置选项卡的激活 选项
                if (Number(res_data._area_id) != -1){
                    $(".TabSelect #all_paper").removeClass('unactive');
                    $(".TabSelect #all_paper").addClass('active');
                    $(".TabSelect #recommendation_paper").removeClass('active');
                    $(".TabSelect #recommendation_paper").addClass('unactive');
                    $('.timingLi').empty();
                    $('.timingLi').append(res_data.papers_html);
                    $('.selectArea ul li .active').attr('class','');
                    $(".selectArea ul li a[area_id='"+res_data.area_id+"']").removeClass('active');
                    $(".selectArea ul li a[area_id='"+res_data.area_id+"']").addClass('active');
                    $(".selectArea").show();

                }else{
                    $('.AllQ .page').empty();
                    // 设置选项卡的激活 选项
                    // recommendation_paper
                    $(".TabSelect #all_paper").removeClass('active');
                    $(".TabSelect #all_paper").addClass('unactive');
                    $(".TabSelect #recommendation_paper").removeClass('unactive');
                    $(".TabSelect #recommendation_paper").addClass('active');
                    $('.timingLi').empty();
                    $('.timingLi').append(res_data.papers_html);
                    $(".selectArea").hide();
                }
                // 写入分页标签
                $('.AllQ .page').empty();
                $('.AllQ .page').append(res_data.page_html);
            }else{
                if (res_data.info) $.blockUI({message:window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                else setalert("获取试卷列表失败！");
            }

        }else setalert('网络错误！');

    };

    $.get(url).always(callback);
};

// 行测 - 定期模考：开始（抽题）
xc.module.timing_mock_exercise.begin = function(paper_id, ocaml, PWD){
    //var STATIC = (location.origin + location.pathname).replace('index.php','') + 'public/static/';
    if ( /,/.test(paper_id) ){
        a = paper_id.split(',');
        paper_id =  a[0];
        from = a[1];
    } else {
        from = 5;
    }
    if ( !paper_id ) {
        try{console.log('** paper_id.')}catch(e){};
        return -1;
    } else {
        paper_id = parseInt(paper_id);
    }

    if (ocaml && ocaml != 'ocaml' ){
        pwd = ocaml.substr(5);
        if (!PWD){
            var msg = '<div class="join_room"><div class="top"><div class="left">密码验证</div><div class="right"><a href="javascript:$.unblockUI();">'
                    + '<img src="../img/index/boxCancel.png" class="boxCancel"/></a></div><div class="clear"></div></div>'
                    + '<div class="boxInputDiv join_input"><div class="left">输入密码</div><div class="right"><input type="password"  />'
                    + '</div><div class="clear"></div></div><div class="tips"></div><div class="bottom" style="border-top:1px #CCC solid;">'
                    + '<div class="join_roobtn">'
                    + '<a  class="createRoomBtn " onclick="ppp=$(\'.join_room input\').val();xc.module.timing_mock_exercise.begin(\'#paper_id#,#from#\', \'#ocaml#\', ppp);delete ppp;">'
                    + '组卷模考</a><a onclick="$.unblockUI();" class="cancelRoomBtn">取 消</a></div></div></div>';
            msg = msg.replace( '#paper_id#', paper_id ).replace( '#ocaml#', ocaml ).replace("#from#", from);
            _dom = {message : $(msg), css : {width : '420px',height : '200px',top:  (resizeH/2-150) + 'px',left: (resizeW/2 - 200) + 'px',backgroundColor : 'white',position : 'absolute'}};
            $.blockUI( _dom );
            return false;
        }else{
            if (pwd != PWD) {
                $('.join_room .tips').text('提示：密码输入错误！');
                return false;
            }
        }
    }

    var url = urllib.build('Administration/timing_chouti',{paper_id:paper_id, rnd: Math.random(), from: from });

    var callback = function (){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (parseInt(res_data.status) == 1){
                window.location.href=res_data.url;
            }else {
                setalert( res_data.info || '组卷失败！！！', null, res_data.url );
            }
        }else setalert('网络错误！');
        loading.hide();
    };
    loading.show('正在为你抽取试卷...');
    $.get(url).always(callback);
};

// 行测 - 模拟考试：开始（抽题）
xc.module.timing_mock_exercise.begin20 = function(paper_id, ocaml, PWD){
    //var STATIC = (location.origin + location.pathname).replace('index.php','') + 'public/static/';
    if ( /,/.test(paper_id) ){
        a = paper_id.split(',');
        paper_id =  a[0];
        from = a[1];
    } else {
        from = 5;
    }
    if ( !paper_id ) {
        try{console.log('** paper_id.')}catch(e){};
        return -1;
    } else {
        paper_id = parseInt(paper_id);
    }

    if (ocaml && ocaml != 'ocaml' ){
        if (!PWD){
            var msg = '<div class="join_room"><div class="top"><div class="left">登陆验证</div><div class="right"><a href="javascript:$.unblockUI();">'
                    + '<img src="../img/index/boxCancel.png" class="boxCancel"/></a></div><div class="clear"></div></div>'
                    + '<div class="boxInputDiv join_input"><div class="left">输入报名序列号</div><div class="right"><input type="text" id="pasword" />'
                    +'</div><div class="clear"></div></div>'
                    + '<div class="boxInputDiv join_input"><div class="left">输入手机号</div><div class="right"><input type="text"  id="phonenum"/>'
                    + '</div><div class="clear"></div></div><div class="tips"></div><div class="bottom" style="border-top:1px #CCC solid;">'
                    + '<div class="join_roobtn">'
                    + '<a  class="createRoomBtn " onclick="ppp=$(\'.join_room input\').val();xc.module.timing_mock_exercise.begin20(\'#paper_id#,#from#\', \'#ocaml#\', ppp);delete ppp;">'
                    + '登陆模考</a><a onclick="$.unblockUI();" class="cancelRoomBtn">取 消</a></div></div></div>';
            msg = msg.replace( '#paper_id#', paper_id ).replace( '#ocaml#', ocaml ).replace("#from#", from);
            _dom = {message : $(msg), css : {width : '420px',height : '00px',top:  ($(window).height()/2+document.body.scrollTop-150) + 'px',left: ($(window).width()/2 - 200) + 'px',backgroundColor : 'white',position : 'absolute'}};
            $.blockUI( _dom );
            return false;
        }else{


            var url_check = urllib.build('mokao/check_ticket');
            var data_check={'paper_id':paper_id,'pasword':$('#pasword').val(),'phonenum':$('#phonenum').val(),'ajax':1};
            var callback_check = function (){
                if (arguments[2].status == 200){
                    var res_data = arguments[0];


                    if (parseInt(res_data.status) == 1){
                        loading.show('正在验证你的信息....');
                        // window.location.href=res_data.url;
                      $.get(url).always(callback);
                       // ct();
                    }else if (parseInt(res_data.status) == 2){

                    $(".tips").html(res_data.msg);
                    $(".createRoomBtn").html("再次登陆");
                    $(".createRoomBtn").attr('onclick',"").click(eval(function(){againlogin()}));

                    }else {
                        $(".tips").html(res_data.info);
                        // setalert( res_data.info || '准考证不正确22！', null, res_data.url );
                    }
                }else setalert('网络错误！');
            // loading.hide();
            };
            function againlogin(){
                var data_check={'paper_id':paper_id,'pasword':$('#pasword').val(),'phonenum':$('#phonenum').val(),'ajax':1,'again':1};
                $.post(url_check,data_check).always(callback_check);
            }

            $.post(url_check,data_check).always(callback_check);
        }
    }

    var url = urllib.build('mokao/timing_chouti',{paper_id:paper_id, rnd: Math.random(), from: from });

    var callback = function (){
        if (arguments[2].status == 200){
            var res_data = arguments[0];

            if (parseInt(res_data.status) == 1){
                window.location.href=res_data.url;
            }else {
                setalert( res_data.info || '组卷失败！！！！', null, res_data.url );

            }
        }else setalert('网络错误！');
        // loading.hide();
    };
    $('.tips').html('正在验证考试信息...');
    // $.get(url).always(callback);

};

//答题时准考证再次验证
xc.mokao  = {};
xc.mokao.login=function(){
    var phonenum = $('.z_login input[name="phonenum"]').val();
    var paper_id = $('.z_login input[name="paperid"]').val();
    var password = $('.z_login input[name="password20"]').val();
    var url_check = urllib.build('mokao/check_ticket');
    var data_check={'paper_id':paper_id,'pasword':password,'phonenum':phonenum,'ajax':1,'again':1};
        var callback_check = function (){
            if (arguments[2].status == 200){
                var res_data = arguments[0];
                if (parseInt(res_data.status) == 1){
                    $('.blockUI').hide();
                }else if (parseInt(res_data.status) == 2){
                $(".tips").html(res_data.msg);
                $(".loginBtn").html("再次登陆");
                $(".createRoomBtn").attr('onclick',"").click(eval(function(){againlogin()}));

                }else {
                    $(".tips").html(res_data.info);
                }
            }else setalert('网络错误！');
        };
         $.post(url_check,data_check).always(callback_check);

}



//模拟考试交卷






// 行测 - 定期模考：交卷
xc.module.timing_mock_exercise.submit = function(auto){
    loading.show('提交中...');
    var begin_time = $('#BeginTime').val();
    var EndTime = (new Date().getTime())/1000;
    var used_time = Number(EndTime) - Number(begin_time);
    var used_time = parseInt(used_time);
    $('#EndTime').val(parseInt(EndTime));
    if (used_time > 1){}else{var used_time = 0;};
    $('#used_time').val(used_time);
    var url = urllib.build('Administration/timing_submit');
    var data = $('form.radioInput').serialize();

    var callback = function(){
        var msg = $( '<div class="confirm" id="confirm_do" style="display:none"><div class="confirm_msg">提示:交卷失败！</div><div class="confirm_btn">'
                +    '<a href=\''+ urllib.build('Administration:index')  +'\' class="submit_btn" id="submit_btn_do">回到练习中心</a>'
                +    '<a onclick="javascript:xc.module.timing_mock_exercise.submit();" class="confirm_false" id="confirm_false_do">重新交卷</a></div></div>');

        if (arguments[2].status == 200){
            var res_data = arguments[0];
            var status = parseInt(res_data.status);
            if (res_data && parseInt(res_data.status) == 1){
                setalert('交卷成功！');
                window.location.href=res_data.url;
            }else $.blockUI({message: msg});
        }else{
            // 网络错误！
            // setalert('网络错误！');
            $.blockUI({message: msg});
        }
    };
    $.post(url,data).always(callback);
};


// 行测 - 模拟考试：交卷
xc.module.timing_mock_exercise.submit20 = function(auto){
    loading.show('提交中...');
    var begin_time = $('#BeginTime').val();
    var EndTime = (new Date().getTime())/1000;
    var used_time = Number(EndTime) - Number(begin_time);
    var used_time = parseInt(used_time);
    $('#EndTime').val(parseInt(EndTime));
    if (used_time > 1){}else{var used_time = 0;};
    $('#used_time').val(used_time);
    var url = urllib.build('mokao/timing_submit');
    var data = $('form.radioInput').serialize();

    var callback = function(){
        var msg = $( '<div class="confirm" id="confirm_do" style="display:none"><div class="confirm_msg">提示:交卷失败！</div><div class="confirm_btn">'
                +    '<a href=\''+ urllib.build('Administration:index')  +'\' class="submit_btn" id="submit_btn_do">回到练习中心</a>'
                +    '<a onclick="javascript:xc.module.timing_mock_exercise.submit();" class="confirm_false" id="confirm_false_do">重新交卷</a></div></div>');

        if (arguments[2].status == 200){
            var res_data = arguments[0];
            var status = parseInt(res_data.status);
            if (res_data && parseInt(res_data.status) == 1){
                setalert('交卷成功！');
                window.location.href=res_data.url;
            }else $.blockUI({message: msg});
        }else{
            // 网络错误！
            // setalert('网络错误！');
            $.blockUI({message: msg});
        }
    };
    $.post(url,data).always(callback);
};


// 行测 - 定期模考：查看报告
xc.module.timing_mock_exercise.report = function(exam_id,paper_id){
    // 定期模考 查看报告
    if (!exam_id || !paper_id){return;};
    var url = urllib.build('Administration/timing_report',{'exam_id':exam_id,'paper_id':paper_id,'a':'true'});
    window.location.href=url;
};

// 行测 - 模拟考试：查看报告
xc.module.timing_mock_exercise.report20 = function(exam_id,paper_id){
    // 定期模考 查看报告
    if (!exam_id || !paper_id){return;};
    var url = urllib.build('Mokao/timing_report',{'exam_id':exam_id,'paper_id':paper_id,'a':'true'});
    window.location.href=url;
};




// 预加载函数
xc.init = {};
xc.init.index = function (){
    // 行测 - 首页：自启动

    // 检查未完成的练习
    var url = urllib.build('Administration/undone_exams');
    var callback = function(res_data){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data && res_data.status == 1) $('.sl_side').append(res_data.html);
        }else setalert('网络错误！');
    };

    $.get(url).always(callback);
};




// 临时函数(万人在线估分)
evaluate = {};
evaluate.select_knowledge = function(k_index){
    // 选择 知识点 选项卡
    if (!k_index) return;
    var current_index = $('#module_index').val();  //当前所在模块
    $("#contentMain[k_index='"+current_index+"']").hide();
    $("#contentMain[k_index='"+k_index+"']").show();

    $("li[a='"+current_index+"']").removeClass('active');
    $("li[a='"+k_index+"']").addClass('active');
    $('#module_index').val(k_index);
    //_initNextSelect();
    return;
    var page = int(current_index) + 1;
    var mainobj = $('#contentMain');  //主体内容div
    var url = urllib.build('Evaluate/answer',{'page':page,'rnd':Math.random()});
    var callback = function(res_data){
        if (res_data && res_data.status == 1){
            $('#contentMain').empty().append(res_data.html);
        }else{
            setalert('网络繁忙!');
        }
    };
    $.get(url,callback);
};

evaluate.begin = function (){
    var url = urllib.build('Evaluate/index');
    window.location.href = url;
};

evaluate.check = function(paper_id, code){
    loading.show('抽取试卷中...');
    if (!paper_id || !code) return;
    var url = urllib.build('Evaluate/check',{'paper_id':paper_id, 'code':code, 'rnd':Math.random()});
    var callback = function(res_data){
        // 回调函数
        if (arguments[2].status != 200) {
            setalert('网络错误！');
            return false;
        }
        var res_data = arguments[0];
        if ( !res_data ) {
            setalert('抽卷失败！');
            return false;
        }
        if ( typeof res_data == 'string' ){
            res_data = JSON.parse(res_data);
        }

        if ( parseInt(res_data.status) > 0 ){
            if ( 'exam_id' in res_data ){
                // 进入答题界面
                loading.show('正在进入答题页面...');
                var url = urllib.build('Evaluate/answer',{'exam_id': res_data.exam_id,'code': res_data.code,'rnd': Math.random()});
                window.location.href = url;
            } else setalert("抽卷失败");
        } else if ( parseInt(res_data.status) < 1  ){
            // 用户未登录(或者未第一次绑定手机号码),需要使用手机号码申请 临时帐号.
            $('.ansta_mate').attr('paper_id',paper_id);
            $('.ansta_mate').attr('code',code);
            $.blockUI({message : $('.an_ring'),css : {width : '475px',height : '235px',top:  ($(window).height()/2 - 150) + 'px',left: ($(window).width()/2 - 250) + 'px',backgroundColor : 'none'}});
        } else {
            setalert("unknow error.");
        }
    };

    $.get(url).always(callback);
};

evaluate.init_by_phone = function(phone){
    // 注册临时帐号(根据手机号码)
    if (!phone) return;
    var phone = str(phone);
    if (phone.length<11 || phone.length >11) {
        $.unblockUI();
        var mm = function(){
            setalert('手机号码位数不对！');
        }
        setTimeout(mm,1000);
        return;
    }
    var url = urllib.build( 'Evaluate/init_by_phone',{'phone': phone, rnd: Math.random() } );
    var callback = function(res_data){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data && res_data.status ==1){
                var paper_id = $('.ansta_mate').attr('paper_id');
                var code = $('.ansta_mate').attr('code');
                evaluate.check(paper_id,code);
            }else setalert('网络繁忙!');
        }else setalert('网络错误！');
    };
    $.get(url).always(callback);
};

evaluate.update_phone_number = function(phone){
    // 更新 手机号资料 ( bind phone )
    if ( !phone ) throw Error('参数错误');
    var url, data, callback, phone;
    if ( phone.toString().length < 11 ) {
        $('.BBB_msg').text('请填写合法的手机号码!');
        return false;
    }
    phone = parseInt(phone);
    url = urllib.build('Evaluate/bind_by_phone', { 'phone': phone, 'rnd': Math.random() } );

    callback = function ( response ){
        var body, status;
        if ( response.type == 'progress' ) return 'loading ....';
        if ( response.code == 200 ) {
            // 绑定手机成功
            window.location.reload();
            return false;
        } else if ( response.code == 404 ) {
            // 绑定失败 ...
            $('.BBB_msg').text('绑定失败!');
            /*
            else if ( status == 2 ){
                // 绑定失败 ( 该号码已经被绑定 )
                setalert('该号码已经被绑定!');
            } else {
            }
            */
        } else if ( response.code == 500 ) {


        }
    };
    requests.get(url, {'async': true, 'callback': callback});
}

evaluate.login = function(username, password){
    // 估分登录
    var url, data, callback;
    url = urllib.build('Evaluate/login',{'rnd':Math.random()});
    data = { 'account': username, 'passwd': password };
    callback = function (response){
        var body;
        if ( response.type == 'progress' ) return 'loading ....';
        if ( response.code != 200 ) {
            // 登录失败
            $('#msgmsg1').text( response.body || '提示: 登录失败' );
            try{
                console.log('登录失败');
            }catch (e) {};
        } else if (response.code == 302 || response.code == 301 ) {
            $('#msgmsg2').text( '网络繁忙...');
            return false;
        } else {
            // 登录成功
            body = response.body;
            //console.log(body);
            try{
                jdata = JSON.parse(/\{.*?\}/.exec(body)[0]);
                if ( jdata.status == 1 ){
                    $(document).append(body);
                    window.location.reload();
                }else{
                    $('#msgmsg1').text( response.body || '提示: 登录失败' );
                    try{ console.log('登录失败');} catch (e) {};
                }
            }catch(e){
                $('#msgmsg1').text( response.body || '提示: 登录失败' );
                try{ console.log('登录失败'); } catch (e) {};
            }
        }
    };
    requests.post(url, data, {'async': true, 'callback': callback} );
};

evaluate.register = function ( username, password, repassword ){
    // 估分注册
    if ( !username || !password || !repassword ) throw Error('参数缺失');
    if ( parseInt(password) != parseInt(repassword) ) {
        // 密码前后不一致
        $('#msgmsg2').text('你输入的前后不一致。');
        return false;
    }

    var url, data, callback;
    url = urllib.build('Evaluate/register',{'rnd':Math.random()});
    data = { 'phone': username, 'passwd': password };
    callback = function (response){
        var body;
        if ( response.type == 'progress' ) return 'loading ....';
        if ( response.code != 200 ) {
            // 注册失败
            $('#msgmsg2').text(response.body || '注册失败...');
        } else if (response.code == 302  || response.code == 301 ) {
            $('#msgmsg2').text( '网络繁忙...');
            return false;
        } else {
            // 注册成功
            body = response.body;
            try{
                jdata = JSON.parse(/\{.*?\}/.exec(body)[0]);
                if ( jdata.status == 1 ){
                    $(document).append(body);
                    window.location.reload();
                }else{
                    $('#msgmsg2').text( response.body || '提示: 登录失败' );
                    try{ console.log('登录失败'); } catch (e) {};
                }
            }catch(e){
                $('#msgmsg2').text( response.body || '提示: 登录失败' );
                try{ console.log('登录失败'); } catch ( e ) {};
            }
        }
    };
    requests.post(url, data, {'async': true, 'callback': callback} );
};

evaluate.bind_user_s = function(username,password,repassword){
    var action = "register";
    var url = urllib.build('User/register_412',{'rnd':Math.random()});
    var data = urllib.urlencode({'username':username,'password':password,repassword:repassword});
    // 回调 1
    var callback = function(res_data){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data && res_data.status ==1){
                //setalert('注册成功!');
                var phone = res_data.phone;
                var uid = res_data.uid;
                var url = urllib.build('Evaluate/bind_user',{isbind:0,phone:phone,uid:uid,'rnd':Math.random()});
                // 回调 2
                var callback3 = function (res_data2){
                    if (arguments[2].status == 200){
                        var res_data2 = arguments[0];
                        if (res_data2 && res_data2.status == 1){
                            window.location.reload();
                        }else $('#msgmsg2').text('注册失败');
                    }else setalert('网络错误！');
                };
                $.post(url).always(callback3);     // 回调 2
            }else $('#msgmsg2').text(res_data.info);
        }else setalert('网络错误！');   // 回调 1 错误
    };

    $.post(url,data).always(callback);
};


evaluate.report = function (code){
    // 万人在线估分 答题简报
    if (!code)  return;
    var url = urllib.build('Evaluate/report',{'code':code,'rnd':Math.random()});
    window.location.href = url;
};


evaluate.send_verify = function (phone){
    // 发送验证码
    if ($("#BBB").attr('status') !== '0') return;
    var url = urllib.build('User/send_check',{'rnd':Math.random()});
    var data = urllib.urlencode({phone:phone});
    var callback = function (res_data){
        if (res_data.status == 1){
            window.verify_image_code = res_data.code;
        }else{
            $("#BBB").text("验证码校验失败!");
        }
    };
    var tt = function (){
        if (window.bbb_time <= 0) {
            clearInterval(window.bbb_timer);
            $("#BBB").text('发送验证码');
            $('#BBB').attr('status',0);
        }else{
            var msg = window.bbb_time + "秒后重新发送";
            $("#BBB").text(msg);
        }
        window.bbb_time --;
    };
    //  asdsa
    $("#BBB").attr('status','1');
    window.bbb_time = 60;
    window.bbb_timer = setInterval(tt,1000);

    $.post(url,data,callback);
};

xc.New = {};
xc.New.sf = {};
xc.New.sf.begin = function(code,area_name,paper_id){
    $('#area_name').text(area_name+' 晒分');
    $('#area_name').attr('code',code);
    $("#area_name").attr('paper_id',paper_id);
    $.blockUI({message : $('.an_restrain'),css : {top:  ($(window).height()/2-117) + 'px',left: ($(window).width()/2 -237) + 'px',backgroundColor : 'none'}});
}

xc.New.sf.check = function(){
    // 验证权限
    if ( $('.flase_logreg')[0] ){
        setalert('您还没有登录，请先登录帐号！',null,urllib.build('User:login') );
        return false;
    }else{
        window.location.href = urllib.build('Evaluate:sf');
    }
}

xc.New.sf.report = function(){
    try{
        var point = parseFloat($('#point').val());

        var check_point = function(){
            var paper_id = $("#area_name").attr('paper_id');
            var url = urllib.build('Evaluate:get_sf_paper_point',{paper_id:paper_id});
            $.get(url).always(function(){
                if (arguments[2].status == 200){
                    var res_data = arguments[0];
                    var status = res_data.status;
                    if (status == 1){
                        window.score = parseFloat(res_data.point);
                    }
                }else{
                    setalert('网络错误！');
                    return false;
                }
            });
        };
        check_point();
        if (!(window.score)){
            $('#tips').text('*  验证分数合法性失败！');
            $('#point').val('');
        }else{
            if (point > window.score){
                $('#tips').text('*  你输入的分数不能大于该试卷总分！');
                $('#point').val('');
            }else if (point <1){
                // 分数非法
                $('#tips').text('*  你输入的分数太小！');
                $('#point').val('');
            }else{
                var code = $('#area_name').attr('code');
                var area_name = $('#area_name').text().replace(' 晒分','');
                var url = urllib.build('Evaluate/sf_report',{point:point,code:code,area_name:area_name});
                window.open(url);
            }
        }
    }catch(e){
        $('#tips').text('*  请输入正确的分数！');
        $('#point').val('');
    }

}









// 模块化代码(重构)
xc.answer  = {};
xc.answer.init_sheet = function(){
    // 答题卡效果
    var sideObj = $(".side").eq(0);
    var itemSelectObj = $(".itemSelect").eq(0);
    var sheetObj = $('.sheet').eq(0);
    var sheetBottomObj = $(".sheetBottom").eq(0);
    var sheetObjH = sheetObj.outerHeight();
    var overTop=$(sideObj).offset().top;
    //答题卡点击变换样式
    $(sheetObj).css({position:'fixed', bottom:'0px'});
    //$(sheetObj).css("position","relative");
    //$(sheetBottomObj).show();
    //return;
    //Scroll event
    //2014年11月6日注释 黄海修改.
    $(".sheet_padding").height($(".sheet").height()+22);
    //$(".sheet_padding").height($(".sheet").height());
    window.onscroll =function(){
        var Ostop=$(window).scrollTop();
        var footHeight=$("#footer").height();
        //2014年11月6日注释 黄海修改
        var bottomTop=$(document).height()-$(window).height()-footHeight-$(".sheet_padding").height();
        //side fixed
        if(Ostop>overTop){
            $(sideObj).css({position:'fixed', top:'0px'});
            $(itemSelectObj).css({position:'fixed', top:'0px'});
        }else{
            $(sideObj).css({position:'static'});
            $(itemSelectObj).css({position:'static'});
        }
        //答题卡fixed
        if(Ostop>bottomTop-sheetObjH){
            $(sheetObj).css("position","relative");
            $(sheetBottomObj).show();
            $(".sheetInfo").unbind("click");
        }else{
            $(sheetObj).css("position","fixed");
            if($(sheetBottomObj).attr('bShow')=='true'){
                $(sheetBottomObj).show();
            }else{
                $(sheetBottomObj).hide();
                //$(".sheetInfo").bind("click",xc.answer.show_card);
            }
        }
    }
};

xc.answer.check_undone = function (){
    var undone, doms, dom, qid, i, qfrom;
    _undone = sync_incompletes();
    undone = [];
    if ( _undone.length > 0 ){
        for ( x in _undone ){
            undone[_undone[x]] = _undone[x];
        }
    }
    /*
    if ( undone == false ) {
        setalert('交卷失败');
        console.log(':: get undone fail.');
        return false;
    }
    */
    doms = $('.answerCenter');
    for ( i=0;i<doms.length; i++ ){
        dom = doms[i];
        if ( $(dom).hasClass('sigs') ) {
            qid = parseInt($(dom).data('qid'));
            if ( qid in undone ){
                // again
                qfrom = $('.radioInput input[btn="'+qid+'"]');
                answer = $(qfrom).val().replace(' ', '');
                if ( answer == '' ) {
                    console.log('** 未作答 ....');
                } else {
                    //console.log(answer);
                    var exam_id = parseInt($('.radioInput input[name="exam_id"]').val());
                    // parseInt(new Date().getTime()/1000)
                    var data = {'id': parseInt(qid), 'answer': answer, 'qanswer': $(qfrom).data('answer'), 'exam_id': exam_id, 'async': 0, 'time': parseInt($(qfrom).data('time')) };
                    console.log(':: resubmit...');
                    if ( /appid=(\d+)/.test(window.location.search) ){
                        var appid = /appid=(\d+)/.exec(window.location.search)[1];
                    }else var appid = 1002;
                    xc.answer.submit_one(appid,  data);
                }
            }
        }
    }
    return true;
};

xc.answer.save = function (){
    var url, exam_id, data, response, callback;
    url = window.location.href.replace(window.location.origin,  '') + '&action=save';
    exam_id = parseInt($('.radioInput input[name="exam_id"]').val());
    data = {"exam_id": exam_id, "time": parseInt(new Date().getTime()/1000) };

    response = requests.post(url, JSON.stringify(data) , {async: false} );
    if ( response.code != 200 ) {
        setalert( response.body || '进度保存失败！' );
        set_load_event();
    } else setalert( response.body || '进度保存成功！' );
};

xc.answer.new_submit = function (){
    loading.show('提交中...');
    a = xc.answer.check_undone();
    if ( a == true ) console.log(':: check done.')
    else {
        console.log(':: error..');
        return 0;
    }
    var exam_id = parseInt($('.radioInput input[name="exam_id"]').val());
    if ( /appid=(\d+)/.test(window.location.search) ){
        var appid = /appid=(\d+)/.exec(window.location.search)[1];
    }else var appid = 1002;
    var data = {'id': null, 'answer': '', 'exam_id': exam_id, 'async': 1, 'time': parseInt(new Date().getTime()/1000) };
    xc.answer.submit_one(appid,  data);
};

xc.answer.submit_one = function (appid, data){
    // 单题异步提交
    try {
        //console.log('APP ID: ' + appid + "    exam_id: " + data.exam_id );
        //console.log(data);
        var url = window.location.href.replace(window.location.origin,  '');
        data.appid = parseInt(appid);
        //data.exam_id = parseInt(exam_id);
        //data.time = new Date().getTime()/1000;
        //console.log(data);
        if ( data.async == 1 ) var async = false;
        else if ( data.async == 0 ) var async = true;
        res = requests.put( url, data, {async: async} );
        if ( async == false ) {
            console.log(':: done!');
            if ( res.code == 200 ){
                setalert('交卷成功');
                if ( /paper_id=(\d+)/.test(window.location.search) ) var paper_id = /paper_id=(\d+)/.exec(window.location.search)[1];
                else var paper_id = 0;
                if ( parseInt(appid) == 1005 ) window.location.href="/cgi-bin/exam.php?appid=#appid#&action=report&object=bait&exam_id=#exam_id#&paper_id=#paper_id#".replace("#appid#", appid).replace("#exam_id#", data.exam_id).replace("#paper_id#", paper_id);
                else window.location.href="/cgi-bin/exam.php?appid=#appid#&action=report&exam_id=#exam_id#&paper_id=#paper_id#".replace("#appid#", appid).replace("#exam_id#", data.exam_id).replace("#paper_id#", paper_id);
            } else {
                console.log(res);
                setalert('交卷失败');
                set_load_event();
            }
        }
    } catch (e){
        console.log(':: submit_one ERROR. ');
        console.log(e);
    }
    return 1;
};

xc.answer.select_option = function (obj,choices_type){
    // 选择答题选项(多选题和单选题)
    // NOTE: choices_type : 100/101 为多选题
    var card = ['A','B','C','D','E','F','G','H','I','J','K','L'];
    //var STATIC = (location.origin + location.pathname).replace('index.php','') + 'public/static/';
    var STATIC = "/public/static/";
    var li_index = $(obj).index();                    // 答案选项在答案列表当中的次序( )
    var btn = $(obj).parent().attr('btn');        // 试题编号
    var tixu = parseInt($(obj).parents('.sigs').attr('index'));  // 从1开始计数
    var this_check = $('.radioInput input[btn="'+btn+'"]');
    var this_check_val = $(this_check).val();
    if($(obj).hasClass('selectActive')){
        // 删除状态
        $(obj).removeClass('selectActive');
        $(obj).parent().siblings('ul').children(':eq('+li_index+')').removeClass('selectActive');
        // 清除答题表单的答案数据
        if (parseInt(choices_type) == 100 || parseInt(choices_type) == 101){
            // 多选题
            $(this_check).val(this_check_val.replace(card[li_index]+',', ''));
            if(!$(obj).siblings().hasClass('selectActive')) $('.sheetTable a[btn="'+btn+'"]').attr('style',null);
        }else{
            // 单选题
            $('.radioInput input[btn="'+btn+'"]').val('');
            $('.sheetTable a[btn="'+btn+'"]').attr('style',null);
            $('.selectBox[btn="'+btn+'"] li').addClass('selectActive').siblings().removeClass('selectActive');
        }
        // 操作cookie 答案信息
        xc.answer.remove_solution(tixu,choices_type,card[li_index]);
    }else{
        // 添加状态
        if (parseInt(choices_type) == 100 || parseInt(choices_type) == 101){
            // 多选题
            $(obj).addClass('selectActive');
            $(obj).parent().siblings('ul').children(':eq('+li_index+')').addClass('selectActive');
            if(this_check_val.search(card[li_index]) == -1) $(this_check).val(this_check_val+card[li_index]+',');
            $('.sheetTable a[btn="'+btn+'"]').css("background","url("+STATIC+"images/sheetYES.png) no-repeat 0 0");
        }else{
            // 单选题
            $(obj).addClass('selectActive').siblings().removeClass('selectActive');
            $(obj).parent().siblings('ul').children(':eq('+li_index+')').addClass('selectActive').siblings().removeClass('selectActive');
            var solution = card[li_index];
            $('.radioInput input[btn="'+btn+'"]').val(solution);
            $('.sheetTable a[btn="'+btn+'"]').css("background","url("+STATIC+"images/sheetYES.png) no-repeat 0 0");
        }
        // 操作cookie 答案信息
        xc.answer.save_solution(tixu,choices_type,card[li_index]);
    }


    $(this_check).data('time', parseInt(new Date().getTime()/1000) );
    // 异步提交
    try{
        if ( window.location.pathname == '/cgi-bin/exam.php' ){
            var exam_id = parseInt($('.radioInput input[name="exam_id"]').val());
            if ( /appid=(\d+)/.test(window.location.search) ){
                var appid = /appid=(\d+)/.exec(window.location.search)[1];
            }else var appid = 1002;

            var data = {'id': parseInt(btn), 'answer': $(this_check).val(), 'qanswer': $(this_check).data('answer'), 'exam_id': exam_id, 'async': 0, 'time': parseInt($(this_check).data('time')) };
            xc.answer.submit_one(appid,  data);
        }
    } catch ( e ){};
    // 位移

    // 跳转到下一题(多选题事先给用户提示)
        var _thisNowNum= parseInt($(obj).parents('.sigs').attr('index'));
        var last_index = parseInt($('.sigs:last').attr('index'));
        if(_thisNowNum<last_index){
            if (parseInt(choices_type) == 100 || parseInt(choices_type) == 101){
                // 多选题
                $(obj).parent().parent().attr('tips',null);
                $('.pop-up').remove();
                var tips = '<div class="pop-up"><div class="pop-img"></div><div class="pop_center"><div class="pop_padding"><img alt="" src="/img/index/presentation.png" /><span>本题是多选题，不会帮您自动下滑到下一题哦！</span></div><a  onclick="' + 'javascrip:$(this).parent().parent().parent().parent().parent().parent().attr(\'tips\',\'1\');$(\'.pop-up\').remove();return false;"' + ' class="pop_btn pop-hint" title="本页不再提示">本页不再提示</a><a  onclick="javascript:$(this).parent().parent().parent().parent().attr(\'tips\',null);$(\'.pop-up\').remove();return false;" class="pop_btn pop-colse" title="关闭">关闭</a><div class="clear"></div></div></div><div class="clear"></div>';
                var tips_t = '<a class="mchoice_skip" onclick="javascript:$(\'body,html\').animate({scrollTop:$(\'.sigs[index=\'+(parseInt($(this).parents(\'.sigs\').attr(\'index\'))+1)+\']\').offset().top-80},100);$(\'.pop-up\').hide();$(this).parent().parent().attr(\'tips\',null)">确认，跳到下一题</a>';
                if ( $(obj).parent().parent().parent().parent().attr('tips') !== '1'  && $(obj).parent().parent().attr('tips') !== '1' ){
                    $(obj).parent().parent().attr('tips','1');
                    $(obj).parent().parent().find('.topic').parent().prepend(tips);
                    $(obj).parent().parent().find('.M_selectBox').after(tips_t);
                    //$(this).parent().parent().parent().parent().attr('tips',null);
                }else if ($(obj).parent().parent().parent().parent().attr('tips') === '1') {
                    $(obj).parent().parent().find('.M_selectBox').after(tips_t);
                }

            }else{
                // 单选题
                var _thisTop=$('.sigs[index='+(_thisNowNum+1)+']').offset().top-80;
            $('body,html').animate({scrollTop:_thisTop},100);
            }
        }

    // 最后答题时间 记录（在恢复 暂停答题 状态后,以最后答题时间为准）
    window.LAST_CHOOSE_TIME = (new Date()).getTime();

    // 更新全局信息
    xc.answer.update_info();
};

xc.answer.analytics = function(qid,tixu){
    // 吴楚楠做用户行为数据分析使用
    var exam_id = $("input[name='exam_id']").val();
    var user_name = $('.listShow').text();
    var url = "";
    var post_data = {exam_id:exam_id,question_id:qid,question_index:tixu,user_name:user_name,time:time.time()};
    try{$.post(url,post_data).always(function(){});}catch(e){};
}

xc.answer.update_info = function(){
    // 答题卡/选项卡 信息更新
    // 答题卡信息更新
    try{
        if ( window.location.act.indexOf('parse') !== -1 )  return true;
    }catch(e){

    }
    if ( /=answer/.test(window.location.search)
        || /=really_answer/.test(window.location.search)
        || /=timing_answer/.test(window.location.search)
    ){
        $('#num_item').text($('#form-input input').length-$('#form-input input[value!=""]').length);
    } else if ( /parse/.test(window.location.search) ) {
        // $('#num_item').text($('.sheetTabless .num_item_td').length );
        var total = 0;
        $('.sheetTabless a').map(function (qcard, index) {
            if ( $($('.sheetTabless a')[qcard]).parent().css("visibility") != "hidden" ) total++;
        });
        $( '#num_item' ).text( total );
    }

    // 选项卡信息更新
    for (var i=1;i<6;i++){
        var done_num = 0;
        var groups = $('.sheetTable a[group="'+i+'"]');
        for (var x=0;x<groups.length;x++ ){
            if ( $( groups[x] ).attr('style') != undefined) done_num++;
        }
        $('.select_M_Num').eq(i-1).text(done_num);
    }
    return true;
}

xc.answer.select_knowledge = function (index, gotop){
    // 切换真题卷答题模块 选项卡
    //var current_group = $('#select_module_index').val();
    //$('.contentMain[group="'+current_group+'"]').hide();
    //$('.contentMain[group="'+index+'"]').show();

    $('#select_module_index').val(index);
    $('#select_module li').eq(index-1).addClass('active').siblings('li').removeClass('active');
    $('.contentMain').hide();
    $('.contentMain').eq(parseInt(index) -1).show();


    if (parseInt(index) == $('#select_module li').size()) $('.next-step').hide();
    else $('.next-step').show();
    if (gotop && gotop == 2) $('body,html').animate({scrollTop:0+'px'},200);
    xc.answer.update_info();

    if ( window.location.pathname == '/cgi-bin/exam.php' || window.location.pathname == '/cgi-bin/parse.php' ){
        load(index);
    }

};

xc.answer.focus = function(obj,tixu){
    // 使该试题出现在当前可视区域（锚点）
    var target_group = $(obj).attr('group');                                                                     //选中标签的组
    var current_group = $('#select_module_index').val();
    if(target_group != current_group) xc.answer.select_knowledge(target_group);  // 模块变幻
    // 位移
    $('body,html').scrollTop($('.sigs:eq(' + (tixu-1) + ')').offset().top-55);
    xc.answer.update_info();
    // 清除 「只看错题」/ 「展开所有解析」的状态值
    $('.analysisDiv').hide();
    $('.showanalyses').attr('checked',false);
    return true;
}

xc.answer.show_card = function(){
    // 答题卡呈现与隐藏
    var dom = $(".sheetBottom").eq(0);
    if ($(dom).css("display")=='none') $(dom).show().attr('bShow','true');
    else $(dom).hide().attr('bShow','none');
    xc.answer.update_info();
}


xc.answer.save_solution = function (tixu,choices_type,solution){
    // 保存答题数据至cookie.
    var exam_id = $("input[name='exam_id']").val();
    try{
        // 答题答案保存 初始化
        if (!cookie.match('answer')) cookie.add('answer','{"'+exam_id+'":[]}',{expires:3});
        var _r = json.decode(cookie.get('answer'));
        if (_r.length == 0 ) _r[exam_id] = [];
        if ( _r[int(exam_id)] == undefined || _r[int(exam_id)] == null) _r[exam_id] = [];
        cookie.add('answer',json.encode(_r),{expires:3});
    }catch(e) {cookie.remove('answer')};

    try{
        var __rc = json.decode(cookie.get('answer'));
        if (parseInt(choices_type) == 100 || parseInt(choices_type) == 101){
            // 多选题
            if ( __rc[int(exam_id)][tixu] == null ||  __rc[int(exam_id)][tixu] == undefined)  __rc[int(exam_id)][tixu] = '';
            __rc[int(exam_id)][tixu] = __rc[int(exam_id)][tixu] + solution + ',';
        }else{
            // 单选题
            if ( __rc[int(exam_id)][tixu] == null ||  __rc[int(exam_id)][tixu] == undefined)  __rc[int(exam_id)][tixu] = '';
            __rc[int(exam_id)][tixu] = solution;
        }
        // 写入cookie.
        cookie.add('answer',json.encode(__rc),{expires:3});   // 生命周期:3天
    }catch(e){
        cookie.remove('answer');
    }
};

xc.answer.remove_solution = function(tixu,choices_type,solution){
    // 从cookie 删除 答题数据
    var exam_id = $("input[name='exam_id']").val();
    try{
        // 答题答案保存 初始化
        if (!cookie.match('answer')) cookie.add('answer','{"'+exam_id+'":[]}',{expires:3});
        var _r = json.decode(cookie.get('answer'));
        if (_r.length == 0 ) _r[exam_id] = [];
        if ( _r[int(exam_id)] == undefined || _r[int(exam_id)] == null) _r[exam_id] = [];
        cookie.add('answer',json.encode(_r),{expires:3});
    }catch(e) {cookie.remove('answer')};

    try{
        var __rc = json.decode(cookie.get('answer'));
        if (parseInt(choices_type) == 100 || parseInt(choices_type) == 101){
            // 多选题
            __rc[int(exam_id)][tixu] = __rc[int(exam_id)][tixu].replace(solution+',','');
        }else{
            // 单选题
            // NOTE:IE下是 undefined ， google/firefox 为 null
            if (navigator.userAgent.indexOf('IE') !== -1) __rc[int(exam_id)][tixu] = undefined;
            else __rc[int(exam_id)][tixu] = null;
        }
        // 写入cookie.
        cookie.add('answer',json.encode(__rc),{expires:3});   // 生命周期:3天
    }catch(e){
        cookie.remove('answer');
    }
}


xc.answer.login = function(){
    var user_name = $('.z_login input[name="username"]').val();
    var password = $('.z_login input[name="password"]').val();
    var url = urllib.build('User/login_with_nc', {'rnd':Math.random()});
    var data = urllib.urlencode( {'username':user_name, 'password':password} );
    // 回调 1
    var callback = function(res_data){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                //window.location.href=window.location.href;
            	// 再次检查当前新用户是否已经做过此套试卷
                $("body").append(res_data.sync_script);
            	var from, paper_id, m;
            	m = window.location.search.match(/\&(\paper_id)\=(\d+)/);
            	if ( m ) paper_id = parseInt(m[2]);
            	else paper_id = null;
            	m = window.location.search.match(/\&from=(\d+)/);
            	if ( m ) from = parseInt(m[1]);
            	else from = null;
            	delete m;
                xc.answer.chown_exam(res_data.uid, paper_id, from );
            }else{
                var desc = res_data.info || res_data.msg;
                setalert( desc, '我知道了', 'javascript:$.blockUI({message:window.dialog.login_msg,css : {top:  ($(window).height()/2-220) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}  });');
                //$('#msgmsg1').text(res_data.info);
            }
        }else {
            setalert('网络错误！');
            return false;
        }
    }
    $.post(url,data).always(callback);
}

xc.answer.chown_exam = function(user_id, paper_id, from){
    // 更改试卷所有人信息
    var exam_id = $('input[name="exam_id"]').val();
    var url = urllib.build('Administration:chown_exam');
    var data = {exam_id:exam_id,user_id:user_id};
    if ( paper_id && paper_id != null ) data.paper_id = paper_id;
    if ( from && from != null ) data.from = parseInt(from);

    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                // User/logout
                var exit_url = urllib.build('User/logout');
                var chpw_url = urllib.build('Administration/changepw');
                var charea_url = urllib.build('Index/area');
                var user_name = res_data.user_name;
                var chnick_url = urllib.build('Index/chnick');

                if (window.location.mod == 'iq'){
                    $('#flase_logreg').remove();
                    // 已登录状态内容
                    var chanage_html = "<div class=\"z_userInfo\">  <div class=\"z_user_pullDown\"><a class=\"z_listShow\">$uname</a>"
                                    + "<ul class=\"z_userSelect\" ><li><a href=\"$goindex\" >练习中心</a></li> <li><a href=\"$esc\">退出</a>"
                                    + "</li></ul></div></div>";
                    chanage_html.replace('$goindex',urllib.build('Administration:index'))
                                .replace('$esc',urllib.build("User/logout") )
                                .replace('$uname',user_name );
                    $('.head .right').append(chanage_html);
                    setalert('登录/注册 成功！',null,'javascript:xc.module.iq.submit();');
                }else{
                    $('.flase_logreg').remove();
                    var p_info = '<div class="userInfo"><div class="z_user_pullDown"><span  class="listShow">#uname#</span><img src="/img/index/pullDown_ico.jpg" />'
                            + '<ul class="userSelect"><li><a href="charea_url" >考试区域设置</a></li>'
                            + '<li><a href="chnick_url">修改昵称</a></li>'
                            + '<li><a href="chpw_url" >修改密码</a></li><li><a href="exit_url" >退出</a>'
                            + '</li></ul></div></div>'
                    p_info = p_info.replace('exit_url',exit_url)
                                    .replace('chpw_url',chpw_url)
                                    .replace('charea_url',charea_url)
                                    .replace('chnick_url', chnick_url)
                                    .replace('#uname#',user_name);

                    $('.head').append(p_info);
                    if ( res_data.redo == true ) {
                        if ( res_data.msg2 != '' && res_data.msg2 != null ){
                            if ( /act=really_answer/.test(window.location.href) || /act=answer/.test(window.location.href) ){
                                // 真题演练不需要对话
                                xc.answer.submit(1);
                            } else {
                                xc.module.timing_mock_exercise.begin(paper_id);
                                // setalert(res_data.msg2,null,'javascript:xc.answer.submit(1);');
                            }
                        } else {
                            setalert('您之前已经作答完毕，请回到练习中心查看第一次的作答情况', null, 'javascript:window.location.href=\'/index.php?mod=administration&act=index\'' );
                        }
                        //setalert('您之前已经作答完毕，请回到练习中心查看第一次的作答情况', null, 'javascript:window.location.href=\'/index.php?mod=administration&act=report&exam_id=' + res_data.exam_id + '\'' );
                    } else {
                        setalert('登录/注册 成功！',null,'javascript:window.location.reload();');
                    }
                }
            } else if(res_data.status == 2) {
				setalert(res_data.info,'知道了',res_data.url);
			}else setalert('登录/注册 失败！');
        } else setalert('网络错误！');
    }

    $.post(url,data).always(callback);
}


//
xc.answer.register = function(){
    var action = "register";
    var url = urllib.build('User/register_with_nc',{'rnd':Math.random()});
    // user name
    var phone = $('.z_register input[name="email"]').val();
    var password = $('.z_register input[name="password"]').val();
    var repassword = $('.z_register input[name="repassword"]').val();
    var verify_code = $('.z_register input[name="verifi"]').val();
    if (password != repassword) {
        $('.z_register .tips').text('提示：两次密码不一致！');
        return false;
    }
    if (password == '' || password == null ){
        $('.z_register .tips').text('提示：请输入密码');
        return false;
    }
    if ( phone == '' || phone == null  ){
        $('.z_register .tips').text('提示：请输入手机号码！');
        return false;
    }

    var data = {'username':phone,'password':password,repassword:repassword,verify:verify_code};
    // 回调 1
    var callback = function(res_data){

        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data && res_data.status ==1){
                // chanage exam's uid.
                $("body").append(res_data.sync_script);
                window.location.href=window.location.href;
                return;
                xc.answer.chown_exam(res_data.uid);
            }else $('.z_register .tips').text('提示：'+res_data.info);
        }else $('.z_register .tips').text('提示：网络错误！');
    };
    $.post(url,data).always(callback);
}

xc.answer.collect_infomation = function (){
    /*
        （返回的错误信息）<br />
        url：（考生试卷的url）<br />
        用户名：（考生的用户名）<br />
        答案选项：（考生做题的答案）<br />
        时间：（考生开始答题时间和交卷反馈时间）
    */
    var exam_id = parseInt($("input[name='exam_id']").val());
    var exam_name = $('.main .title').eq(0).text();
    var etime = parseInt((new Date().getTime())/1000);  // 单位：秒
    var uid = cookie.get('uid');
    var uname = cookie.get('ht_username');
    var submit_url = $('#input_data_form').attr('action');
    var submit_data = $('form.radioInput').serialize();
    if ( type(window.PAUSE_TIME) == 'int' ) submit_data = submit_data + '&' + urllib.urlencode({pause_time: window.PAUSE_TIME});
    infomation = "试卷编号: " + exam_id + "\n"
                            + "试卷名称: " + exam_name + "\n"
                            + "结束时间: " + etime + "\n"
                            + "用户编号: " + uid + "\n"
                            + "用户名称: " + uname + "\n"
                            + "提交地址: " + submit_url + "\n"
                            + "提交数据: " + submit_data + "\n"
                            + "其它描述: " + "\n\n";
    //console.log(":: 交卷信息: ")
    //console.log(infomation);
    $('.confirm_xxx .textar').val(infomation);
    $('.confirm_xxx .textar').select();

    var isie = function (){
        if ( navigator.userAgent.indexOf('Trident') >= 0 ) return true;
        if ( navigator.userAgent.indexOf('MSIE') >= 0 ) return true;
        return false;
    };
    if ( isie() ){
        // IE / *
        $("#d_clip_button").live("click", function(){
            $('.confirm_xxx .textar').select();
            document.execCommand('Copy');
        });
        return true;
    } else {
        $("#d_clip_button").attr('onclick', '');
    }

    var clip = new ZeroClipboard($("#d_clip_button"));
    clip.on("ready", function() {
        console.log("Flash movie loaded and ready.");
        var ch_style = function (){
            try{
                copy_dom = document.getElementById('d_clip_button').parentElement;
                flash_dom = document.getElementById('global-zeroclipboard-html-bridge');
                copy_dom.appendChild(flash_dom);
            }catch(e){};

            flash_dom = $("#global-zeroclipboard-html-bridge");
            offset = {top:0, left:0};
            try{
                flash_dom.offset(offset); // top / left
            }catch(e){}
            // Fix IE
            try{
                flash_dom.offsetTop = offset.top; // top / left
                flash_dom.offsetLeft = offset.left; // top / left
            }catch(e){}
        };
        this.on("aftercopy", function(event) {
            console.log("Copied text to clipboard: " + event.data["text/plain"]);
        });
        setTimeout(ch_style, 800);
    });
    clip.on("error", function(event) {
        $(".demo-area").hide();
        console.log('error[name="' + event.name + '"]: ' + event.message);
        ZeroClipboard.destroy();
        $('.confirm_xxx .copy_false_msg').html('您的浏览器不支持一键复制，请右键复制');
    });


    return true;
};

xc.answer.submit = function(num){
    // 交卷复用函数
    // num : 未作答  试题数量
    unset_load_event();
    try{
        if ( window.navigator.onLine == false){
            setalert('你已掉线，无法执行交卷操作，请在网络恢复正常时再次尝试。');
            return false;
        }
    }catch(e){}

            var total = $('#form-input input[value=""]').length;
            // 交卷
            var submit = function(){
            var EndTime = parseInt((new Date().getTime())/1000);  // 单位：秒
            $('#EndTime').val(EndTime);
            var url = $('#input_data_form').attr('action');
            if ( url == undefined || url == null || url == '' || url == ' ' ) {
                setalert('出错啦');
                return false;
            }
            var exam_id = parseInt($("input[name='exam_id']").val());
            var url2 = "/apis/cascakv/kvs/submit";
            url +=  "&jrnd=" + Math.random();
            var post_data = $('form.radioInput').serialize();

            if ( type(window.PAUSE_TIME) == 'int' ){
                post_data = post_data + '&' + urllib.urlencode({pause_time: window.PAUSE_TIME});
            }

            var callback = function(){

                if (arguments[2].status == 200){
                    var res_data = arguments[0];
                    var status = parseInt(res_data.status);
                                      console.log(res_data);
                    if (status == 1) {
                        setalert('交卷成功！');
                        location.href=res_data.url;
                        return true;
                    }else if (status == -1) {
                        var okhehe = function (){
                            loading.hide();
                            setalert(res_data.info||res_data.msg||'请勿重复交卷');
                        };
                        setTimeout(okhehe, 500);
                    } else {
                        if (res_data.info && window.dialog != undefined && window.dialog.login_msg != undefined) {
                            console.log(":: Login dialog");
                            var msg = {};
                            msg.message = $(window.dialog.login_msg);
                            msg.css = {};
                            msg.css.top = ($(window).height()/2-140) + "px";
                            msg.css.left = ($(window).width()/2 -237) + "px";
                            msg.css.backgroundColor = 'none';
                            msg.css.position = 'fixed';
                            var okhehe = function (){
                                loading.hide();
                                $.blockUI( msg );
                            };
                            setTimeout(okhehe, 500);

                        }  else {
                            console.log(":: Server Busy....");
                            //setalert('服务器繁忙，请稍后再试！');
                            // var dom = $('<div class="confirm" id="confirm_do" style="display:none"><div class="confirm_msg">提示:交卷失败！</div>'
                            //         + '<div class="confirm_btn"><a onclick=\'javascript:$.unblockUI();\' class="submit_btn" id="submit_btn_do">返回答题页面</a>'
                            //         + '<a href="javascript:xc.answer.submit();" class="confirm_false" id="confirm_false_do">重新交卷</a></div></div>' );
                            var dom = $($('.report_submiterror').html());
                            var okhehe = function (){
                                loading.hide();
                                $.blockUI({message: dom, css: {position: 'fixed', 'top': ($(window).height()/2-300) + "px"} });
                            };
                            setTimeout(okhehe, 500);
                        }
                    }
                    set_load_event();
                }else{
                    console.log(":: Network Error....");
                    // 网络错误
                    // var dom = $( '<div class="confirm" id="confirm_do" style="display:none"><div class="confirm_msg">提示:网络错误！</div>'
                    //         + '<div class="confirm_btn"><a onclick=\'javascript:$.unblockUI();set_load_event();\' class="submit_btn" id="submit_btn_do">返回答题页面</a>'
                    //         + '<a onclick="xc.answer.submit();" class="confirm_false" id="confirm_false_do">重新交卷</a></div></div>' );
                    var dom = $($('.report_submiterror').html());
                    var okhehe = function (){
                        loading.hide();
                        $.blockUI({message: dom, css: {position: 'fixed', 'top': ($(window).height()/2-200) + "px"} });
                    };
                    setTimeout(okhehe, 500);
                }
            }
            /*
            console.log(post_data);
            // 压缩处理
            try{
                zip = new JSZip();
                zip.file("solution.txt", post_data);
                var compressed_bytes = zip.generate({type : "uint8array"});//uint8array  string
                var compressed_data = "";
                for (var i=0;i<compressed_bytes.byteLength;i++){
                    compressed_data += compressed_bytes[i];
                    if (i != compressed_bytes.byteLength -1) compressed_data += ',';
                }
                post_data = 'compressed='+compressed_data;
                delete zip;
            }catch (e){

            }
            console.log(post_data);
            */
            try{
                $.post(url,post_data).always(callback);
                if ( location.host == "tiku.huatu.com" || location.host == 'zhuantiku.com' || location.host == 'tiku.huatu.com' ){
                    requests.put( url2,  {'key': exam_id.toString(), 'value': post_data}, {async: true} );
                }
                loading.show('提交中...');
            }catch (e) {
                loading.hide();
            }
    };
    // 提示(num 为 未作答试题数量)
    var alert_tips = function(total){
        var _yes = $('<a onclick="javascript:$.unblockUI();xc.answer.submit();" class="submit_btn" id="submit_btn_do">确定交卷</a>');
        var _no = $('<a onclick="javascript:$.unblockUI();" class="confirm_false" id="confirm_false_do">谢谢提醒,继续</a>');
        var html = $( '<div class="confirm" id="confirm_do" style="height:180px;"><div class="confirm_msg">还有 <span id="notSelectNum">'
                + total
                + '</span> 道题未答完,确定交卷吗?</div></div>')
                .append($('<div class="confirm_btn"></div>').append(_yes).append(_no));
        $.blockUI({message: html});
    };

    // 新权限验证
    if ( $('.flase_logreg')[0] ){
        window.dialog = {};
        window.dialog.login_msg = ('<div class="z_login"><a style=" display: block;float:right;padding:15px;" title="关闭" href="javascript:$.unblockUI();">'
                                + '<img src="../img/index/boxCancel.png"/></a><div class="z_logincontent"><p class="z_lcaption">登录</p><div class="z_logPrompt">'
                                + '<img style="vertical-align:middle;margin-right:10px;" src="/img/index/presentation.png" />'
                                + '该功能需要登录系统，请先进行登录认证</div><form action="" method="post" id="loginForm"><div class="z_inputDiv">'
                                + '<div class="ico nameInputIco"></div>'
                                + '<input name="username" onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" '
                                + 'type="text" maxlength="24" title="请输入题库帐号/教育网帐号/网校帐号ssmm"  placeholder="请输入题库帐号/教育网帐号/网校帐号" />'
                                + '</div><div class="z_inputDiv"><div class="ico pwdInputIco"></div>'
                                + '<input  id="test" onfocus="javascript:xc.dialog.login.focus(this);" onblur="javascript:xc.dialog.login.blur(this);" name="password"'
                                + ' type="password"  title="请输入密码" maxlength="30" placeholder="请输入密码" /></div><div class="z_Cinput"><div class="left">'
                                + '<input type="checkbox" id="z_checkRegister"/><label for="z_checkRegister">下次自动登录</label></div>'
                                + '<a href="'+urllib.build('User:forget')+'"class="right">忘记密码</a><div class="clear"></div></div>'
                                + '<div class="z_ResDiv z_logter"><div class="left">'
                                + '<input id="loginBtn" onclick="javascript:xc.dialog.login.check(this);" tabindex="6" type="button" value="登&nbsp;&nbsp;录" />'
                                + '</div><a class="right" onclick=\'$.blockUI({message:window.dialog.register_msg,css : {top:  ($(window).height()/2-220) + "px",'
                                +         'left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"} });\'>'
                                + '没有帐号,立即注册</a><div class="clear"></div></div></form></div></div>');

        window.dialog.register_msg = ('<div class="z_register"><a style=" display: block;float:right;padding:15px;" title="关闭" href="javascript:$.unblockUI();">'
                                + '<img src="../img/index/boxCancel.png"/></a><div class="z_logincontent"><p class="z_lcaption">注册</p>'
                                + '<form action="" method="post"  id="registerForm" ><div class="z_inputDiv"><div class="ico mailInputIco"></div>'
                                + '<input  name="email" type="text" onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" '
                                +      'title="请输入手机号码"  placeholder="请输入手机号码" style="background-color:white;" maxlength="11" /></div>'
                                + '<div class="z_inputDiv"><div class="ico pwdInputIco"></div><input name="password"  type="password" '
                                +      'onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" '
                                +      'title="请输入密码（密码为6-16位的英文、数字、下划线）" style="background-color:white;"'
                                +      ' placeholder="请输入密码（密码为6-16位的英文、数字、下划线）" maxlength="24" /></div><div class="z_inputDiv">'
                                + '<div class="ico CpwdInputIco"></div><input name="repassword" type="password" id="passworded" '
                                +      'onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" title="请输入确认密码"'
                                +      ' style="background-color:white;"   placeholder="请输入确认密码" maxlength="24" />'
                                + '</div> <div class="z_inputMin"><div class="z_inputDivMin">'
                                + '<input name="verifi" type="text"  title="请输入校验码"  onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" style="background-color:white;" placeholder="请输入校验码"/>'
                                + '</div><div class="right"> <div class="right" data_c="" id="sendcode" onclick="javascript:getcode(this)">获取校验码</div>'
                                +'</div></div><div class="z_ResDiv z_regter">'
                                + '<div class="left"><input id="loginBtn" tabindex="6" type="button" value="注&nbsp;&nbsp;册" onclick="xc.answer.register();" /></div>'
                                + '<a class="right" onclick=\'$.blockUI({message:window.dialog.login_msg ,css : {top:  ($(window).height()/2-220) + "px",'
                                +      'left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});\'>已有帐号，直接登录</a>'
                                + '<div class="clear"></div><span class="tips"></span></div></form>  </div></div>')
                                    .replace('verify_img',urllib.build('User:verify',{id:'phone'}) )
                                    .replace('verify_img',urllib.build('User:verify',{id:'phone'}) );
        //验证码
        /*
        var $verify = $('[data-act="verify"]');
        $verify.click(function(){
            this['src'] = $(this).attr('data-src') + '&rnd=' + Math.random();
        }).trigger('click');
        */

        /*

        <div class="z_inputMin"><div class="z_inputDivMin"><div class="ico verifiIco"></div>
        <input name="verifi" type="text"  title="请输入验证码"  onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);"
            style="background-color:white;" placeholder="请输入验证码"/></div><div class="right"><img alt="验证码" title="换一张"
            data-act="verify" src="verify_img" /></div></div>

        */
        $.blockUI({message:window.dialog.login_msg,css : {top:  ($(window).height()/2-220) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}  });
        return false;
    }
    // 判断参数
    if (!num) {
        if ( $('.flase_logreg')[0] ){
            $.blockUI({message:window.dialog.login_msg,css : {top:  ($(window).height()/2-220) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}  });
            return false;
        }
        submit();
    } else if ( int(total)>0 ){
        alert_tips(total);
    } else {
        if ( $('.flase_logreg')[0] ){
            $.blockUI({message:window.dialog.login_msg,css : {top:  ($(window).height()/2-220) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}  });
            return false;
        }
        submit();
    }

}

function clear_timer(){
    //...
    if ( window.timer.length > 0 ){
        for ( var i=0; i<window.timer.length; i++ ){
            clearInterval( window.timer[i] );
        }
    }
    window.timer = [];
    window.timer.push ( setInterval(window.updateTime, 1000) );
}
//暂停
function pause_Do(obj){
    //以最后答题选择事件的时间为准
	if(window.timer !== undefined) {
		if ( window.timer.length > 0 ){
			for ( var i=0; i<window.timer.length; i++ ){
				clearInterval( window.timer[i] );
			}
		}
	}

    window.timer = [];

    var pause_func = function(){

        /*if (window.PAUSE_TIME == undefined) {
			window.PAUSE_TIME = 0;
		} else {
			window.PAUSE_TIME++;
		}*/

		var url = urllib.build('Administration:pause');
		$.post(url,{'exam_id': $('input[name=examid]').val()},function (pause_time) {
			window.PAUSE_TIME = pause_time;
		});
	};
    window.pause_timer = setInterval(pause_func,1000);

    if (typeof window.LAST_CHOOSE_TIME === 'undefined') $('#pause_do').attr('time'  ,(new Date()).getTime() );
    else $('#pause_do').attr('time'  , parseInt(window.LAST_CHOOSE_TIME) );
    // $('#pause_do').attr('status' , 1);

    var msg = '<div class="suspend" id="suspend_do"><div class="suspend_close_btn">'
            + '<a onclick="javascript:$(this).attr(\'onclick\', \'\');clearInterval(window.pause_timer);window.clear_timer();'
            + '$.unblockUI();$(\'#pause_do\').attr(\'href\', \'javascript:pause_Do(this);set_load_event();\')" id="close_suspend">'
            + '继续答题</a></div></div>';
    $.blockUI({message: msg,css: {top:  ($(window).height() - 450) /2 + 'px', left: ($(window).width() - 690) /2 + 'px', backgroundColor : 'none',width: '690px'},overlayCSS : {opacity : 0.9}});
}


function nextDo(){
    // 下次做题
    if (typeof LAST_CHOOSE_TIME === 'undefined'){
        //以当前事件时间为准
        var EndTime = (new Date()).getTime();
    }else{
        //以最后答题选择事件的时间为准
        var EndTime = Number(LAST_CHOOSE_TIME);  //单位为毫秒
    }
    //var EndTime = new Date().getTime();
    $('#EndTime').val(EndTime);
    var exam_id = $("input[name='exam_id']").val();
    /*try{
        if ( /ptime=(\d+)/.exec(window.location.search)  ) var ptime = /ptime=(\d+)/.exec(window.location.search)[1];
        if ( /ctime=(\d+)/.exec(window.location.search)  ) var ctime = /ctime=(\d+)/.exec(window.location.search)[1];
    }catch(e){}*/

    var url = urllib.build('Administration:save',{'exam_id': exam_id});
    var data = $('form.radioInput').serialize();
    var callback = function(){
        var code = parseInt(arguments[2].status);
        if (code == 200){
            var res_data = arguments[0];
            if (res_data.info) {
                $.blockUI({message:window.dialog.login_msg ,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});
                return;
            }
            unset_load_event();
            setalert('练习已保存');
            location.href=urllib.build('Administration:index');
            return true;
        }else if ( code == 302) {
            // 已经交过卷
            setalert( response.body || "你已经交过卷" );
            set_load_event();
        }else if (code == 500){
            // unknow error
            setalert( response.body || "unknow error" );
            set_load_event();
        }else {
            setalert('网络错误！');
            set_load_event();
        }
    };
    $.post(url,data).always(callback);
    loading.show('保存中...');
}




xc.answer.init = function (){
    // 行测 - 答题 初始化
    window.Pause_time = null;

    // 答题卡效果 初始化
    //setTimeout(xc.answer.init_sheet,2000);
    xc.answer.init_sheet();

    // 网络状态监测
    /*
    window.network = {};
    window.network.status = true;
    window.ononline = function (){
        alert('online');
        //window.network.status = true;
    };

    window.onoffline = function (){
        alert('offline');
        //window.network.status = false;
    };
    */

    var ua = window.navigator.userAgent;
    var found = ua.match(/MSIE\s(\d+.*?);/i);
    if ( found != false && found != null && found != undefined ){
        var version = parseInt(found[1]);
        if ( isNaN(version) == false ){
            if (version < 9 ){
                alert("注意: 你的浏览器版本过低，为了达到最佳的浏览效果，请下载火狐/谷歌/浏览器。或升级你的IE浏览器至 IE9+ 以上。");
            }
        }
    }

};




/* 行测 解析 区域 */
xc.parse = {};
xc.parse.edit_note = function(obj){
    // 添加/编辑 笔记
    var target = $(obj).parent().parent().find('.noteEdit');
    if (target.css('display') == 'none') {
        $(target).show();
        $($(obj).parent().parent().find('.noteShow')).hide();
        var note = $(obj).parent().find(".noteText").html();
        $(target).find(".noteInput").val(note);
        // 添加事件
        $('.noteInput').live('keyup',function(){
            var textVal = 500-$(this).val().length;
            this.value=this.value.substring(0,500);
            if(textVal<0){
                $(this).parent().find('.noteOutputText').text(0).css('color','red');
            }else{
                $(this).parent().find('.noteOutputText').text(textVal);
            }

        });
    }else {
        // 关闭
        $(target).hide();
        var note = $($(obj).parent().parent().find('.noteText')).text();
        $($(obj).parent().parent().find('.noteEdit .noteInput')).val(note);
        $($(obj).parent().parent().find('.noteShow')).show();
    }

    //$(this).parent().parent().find('.noteEdit').show()
}

xc.parse.save_note = function(obj,qid){
    // 保存 笔记
    if (!qid) return false;
    var note = $(obj).parent().parent().parent().find('.noteInput').val();
    var post_data = {note:note};
    var url  = urllib.build('Widget:note_save',{question_id:qid});
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                $(obj).parent().parent().parent().parent().parent().find('.noteText').text(note);
                $(obj).parent().parent().parent().parent().parent().find('.noteEdit').hide();
                $(obj).parent().parent().parent().parent().parent().find('.noteShow').show();
            }else setalert('笔记保存失败！');
        }else setalert('网络异常！');
    };
    $.post(url,post_data).always(callback);
}

xc.parse.show_analyses = function(obj){
    // 展开解析
    if ( $(obj).hasClass('showAdown')  ){
        $(obj).html('收起解析').removeClass("showAdown").removeClass("showApull").addClass("showApull");
        $(obj).parent().parent().find('.analysisDiv ').show();
        //隐藏笔记编辑框
        $('.noteShow').show();
        $('.noteEdit').hide();
    } else {
        $(obj).html('展开解析').removeClass("showApull").removeClass("showAdown").addClass("showAdown");
        $(obj).parent().parent().find('.analysisDiv ').hide();
        $(obj).parent().find('.showanalyses').attr('checked', false);
    }
}


xc.parse.show_analyses_for_all = function(obj){
    // 展开所有解析
    var __status = $(obj).attr('checked');
    if(__status =='checked'){
        $('.analysisDiv').show();
        $('.showanalyses').attr('sClick','true');
        $('.showAnalysis span').text('收起解析').removeClass("showAdown").addClass("showApull").attr('bClcik','true');
        $('.noteShow').show();
        $('.noteEdit').hide();
        $('.showanalyses').attr('checked',true);
    }else{
        $('.analysisDiv').hide();
        $('.showanalyses').attr('sClick','false');
        $('.showAnalysis span').text('展开解析').removeClass("showApull").addClass("showAdown").attr('bClcik','false');
        $('.showanalyses').attr('checked',false);
    }
}

xc.parse.show_wrong_only = function(obj){
    // 只看错题
    /**
    * is_wrong : 1:错误  0:正确
    *
    * */
    if(obj.checked){
        // 只显示错题
        $('.num_item_td[is_wrong="0"]').css('visibility','hidden');                  // 答题卡试题编号隐藏

        $('#num_item').text($('.num_item_td[is_wrong="1"]').length );      // 更新答题卡 题量
        $('.sigs[is_wrong="0"]').hide() ;                                                  // 试题隐藏
        $('.sigs[is_wrong="0"]').siblings(".answerTop").hide().siblings(".answerBottom").hide();
        //var l = $('.num_item_td[is_wrong="0"]').size();
        //$('.sheetInfo span').html(l)
        //检测资料下的题都正确就把资料隐藏
        /*
        $('.answer').each(function(){
            var leng = $(this).find('.sigs[is_wrong="0"]').size();
            if(leng==0) $(this).hide();
        });
        */
    }else{
        // 全部
        $('.num_item_td[is_wrong="0"]').css('visibility','visible');    // 答题卡试题编号隐藏

        $('#num_item').text($('.num_item_td').length );                   // 更新答题卡 题量
        $('.sigs[is_wrong="0"]').show() ;                                // 题目
        $('.sigs[is_wrong="0"]').siblings(".answerTop").show().siblings(".answerBottom").show();
        /*
        var l = $('.num_item_td[is_wrong="0"]').size();
        $('.sheetInfo span').html(function(){
            return parseInt($(this).html())+l;
        });
        $('.answer').show();
        */
    }
}

xc.parse.init = function(){
    // 行测  解析 初始化
    xc.answer.init_sheet();
    $('.showAnalysis span').addClass("showAdown").text('展开解析');
    $('.showAnalysis span').attr('bClcik','false');
    $('#header .menu li').eq(2).addClass('active');

    //鼠标移上去显示展开全部解析
    $(".sigs").hover(
        function () {
            $(this).find('.hover_div').css({"display":"block"});
        },
        function () {
            $(this).find('.hover_div').css({"display":"none"});
        }
    );

    // 初始化一些 DOM 内容
    if($(".ErrorTextarea").val()==''){
        $(".ErrorTextarea").val('请描述错误信息及修改意');
    }
    $(".ErrorTextarea").bind('focus',function(){
        if($(this).val()=='请描述错误信息及修改意见') $(this).val('');
    });
    $(".ErrorTextarea").bind('blur',function(){
        if($(this).val()=='') $(this).val('请描述错误信息及修改意见');
    });

}





/* 我的练习 模块 ( History Action) */
xc.history = {};

// 我的练习记录
xc.history.records = {};

xc.history.records.type_event = function(obj){
    // 我的练习记录  查看练习类型 select 元素触发 onchanage 事件

}
xc.history.records.show_web = function(obj){
    // 显示所有练习记录（不含 手机端 记录）
    var status = $('select[name="undoneType"] option[selected="selected"]').val();
    var url = urllib.build('History/index',{status:status});
	$('select[name=month]').show();
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                $('.myError').html(res_data.html);
                $($('.t_cut a')[1]).removeClass('logreg_active');
                $($('.t_cut a')[0]).addClass('logreg_active');
                loading.hide();
            }else setalert('网络繁忙！');
        }else setalert('网络错误！');
    };
    loading.show('正在加载中…');
    $.get(url).always(callback);

}

xc.history.records.show_mobile = function(obj){
    // 显示手机端 练习记录
    // status( 0:全部  -1:未完成练习  -2:未完成申论 )

    var status = $('select[name="undoneType"] option[selected="selected"]').val();
    if ( int(status) != 0 ) {
        // 手机端目前没有开放 「未完成练习」这块功能
        var msg = '<span style="margin:0 15px;line-height:30px;" class="empty">您还没有练习记录！</span> ';
        $('.myError .empty').remove();
        $('.myError ul').remove();
        $('.myError .page').empty().before(msg);
        $($('.t_cut a')[0]).removeClass('logreg_active');
        $($('.t_cut a')[1]).addClass('logreg_active');
        //$('.myError').append(msg);
        loading.hide();
        return false;
    }

    var url = urllib.build('History:index',{status:2});  // status ( 2:获取手机端全部练习记录 )
	$('select[name=month]').hide();
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                $('.myError').html(res_data.html);
                $($('.t_cut a')[0]).removeClass('logreg_active');
                $($('.t_cut a')[1]).addClass('logreg_active');
                loading.hide();
            }else setalert('网络繁忙！');
        }else setalert('网络错误！');
    };
    loading.show('正在加载中…');
    $.get(url).always(callback);
}

xc.history.records.show_XCundone = function(){
    // 显示 行测 未完成练习 记录

}

xc.history.records.show_SLundone = function(){
    // 显示 申论 (未评分)  练习记录


}

// 我的错题本
xc.history.error = {};
xc.history.error.show_web = function(obj){
    // 显示网页端 我的错题本
    var url = urllib.build('History:incorrect');
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                loading.hide();
                $('.myError').html(res_data.html);
                $($('.t_cut a')[1]).removeClass('logreg_active');
                $($('.t_cut a')[0]).addClass('logreg_active');
            }else setalert('网络繁忙！');
        }else setalert('网络错误！');
    };
    loading.show('正在加载中…');
    $.get(url).always(callback);
}
xc.history.error.show_mobile = function(obj){
    // 显示手机移动端 我的错题本
    var url = urllib.build('History:vp_error');
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                loading.hide();
                $('.myError').html(res_data.html);
                $($('.t_cut a')[0]).removeClass('logreg_active');
                $($('.t_cut a')[1]).addClass('logreg_active');
            }else setalert('网络繁忙！');
        }else setalert('网络错误！');
    };
    loading.show('正在加载中…');
    $.get(url).always(callback);
}


// 我的收藏
xc.history.collection = {};
xc.history.collection.show_web = function(){
    // 显示 网页端 收藏本
    var url = urllib.build('History:favorite');
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                loading.hide();
                $('.myError').html(res_data.html);
                $($('.t_cut a')[1]).removeClass('logreg_active');
                $($('.t_cut a')[0]).addClass('logreg_active');
            }else setalert('网络繁忙！');
        }else setalert('网络错误！');
    };
    loading.show('正在加载中…');
    $.get(url).always(callback);
}

xc.history.collection.show_mobile = function(){
    // 显示 手机端的 收藏本
    var url = urllib.build('History:vp_collection');
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                loading.hide();
                $('.myError').html(res_data.html);
                $($('.t_cut a')[0]).removeClass('logreg_active');
                $($('.t_cut a')[1]).addClass('logreg_active');
            }else  setalert('网络繁忙！');
        }else setalert('网络错误！');
    };
    loading.show('正在加载中…');
    $.get(url).always(callback);
}



xc.module.iq = {};
xc.module.iq.select_option = function(obj,choices_type){
    // NOTE: choices_type : 100/101 为多选题
    var card = ['A','B','C','D','E','F','G','H','I','J','K','L'];
    var STATIC = (location.origin + location.pathname).replace('index.php','') + 'public/static/';
    var li_index = $(obj).index();                                        // 答案选项在答案列表当中的次序( )
    var btn = $(obj).parent().data('qid');                         // 试题编号
    var tixu = parseInt($(obj).parent().data('tixu'));   // 从1开始计数

    var this_check = $('.line img[data-qid="'+btn+'"]');
    var this_check_val = $(this_check).data('solutions');

    if($(obj).hasClass('active')){
        // 删除状态
        var method = "del";
        $(obj).removeClass('active');
        $(obj).parent().siblings('ul').children(':eq('+li_index+')').removeClass('active');
        // 清除答题表单的答案数据
        if (parseInt(choices_type) == 100 || parseInt(choices_type) == 101){
            // 多选题
            $(this_check).data('solutions',this_check_val.replace(card[li_index]+',', ''));
            var _thisNowNum= int( $(obj).parent().data('tixu') );
            $(obj).parent().parent().find('.next_choice').text('确定，进入下一题').attr('onclick',"javascript:xc.module.iq.go("+_thisNowNum+");");
        }else{
            // 单选题
            this_check.data('solutions','');
            $('.choice_text[data-qid="'+btn+'"] li').addClass('active').siblings().removeClass('active');
            $('.choice[data-qid="'+btn+'"] li').addClass('active').siblings().removeClass('active');
        }
        // 操作cookie 答案信息
        xc.answer.remove_solution(tixu,choices_type,card[li_index]);
    }else{
        // 添加状态
        var method = "add";
        if (parseInt(choices_type) == 100 || parseInt(choices_type) == 101){
            // 多选题
            $(obj).addClass('active');
            $(obj).parent().siblings('ul').children(':eq('+li_index+')').addClass('active');
            if(this_check_val.search(card[li_index]) == -1) $(this_check).data('solutions',this_check_val+card[li_index]+',');
        }else{
            // 单选题
            $(obj).addClass('active').siblings().removeClass('active');
            $(obj).parent().siblings('ul').children(':eq('+li_index+')').addClass('active').siblings().removeClass('active');
            var solution = card[li_index];
            this_check.data('solutions',solution);
        }
        $('.line img[data-qid="'+btn+'"]').src = "/img/index/now.png";
        // 操作cookie 答案信息
        xc.answer.save_solution(tixu,choices_type,card[li_index]);
    }


        // 位移
        // 跳转到下一题(多选题事先给用户提示)
        var _thisNowNum= int( $(obj).parent().data('tixu') );
        var last_index = parseInt($('.question').length);

        if(_thisNowNum<last_index){
            if (parseInt(choices_type) == 100 || parseInt(choices_type) == 101){
                // 多选题
                $(obj).parent().parent().find('.next_choice').text('确定，进入下一题').attr('onclick',"javascript:xc.module.iq.go("+_thisNowNum+");");
            }else{
                // 单选题
                if (method == 'add') $($('.line img')[_thisNowNum-1]).attr('src',"/img/index/done.png");
                else if (method == 'del') $($('.line img')[_thisNowNum-1]).attr('src',"/img/index/now.png");
                $($('.question')[_thisNowNum-1]).hide();
                $($('.question')[_thisNowNum]).show();
                $($('.line img')[_thisNowNum]).attr('src',"/img/index/now.png");
            }
        }else{
            // 最后一题
            if (method == 'add' ){
                if (int(choices_type) > 99){
                    // 多选题
                    $(obj).parent().parent().find('.next_choice').text('交卷').attr('onclick',"javascript:xc.module.iq.submit();");
                    //console.log('DEBUG：最后一题 多选题/不定项');
                }else{
                    // 单选题
                    //console.log('DEBUG：最后一题 单选题');
                    xc.module.iq.submit();
                }

            }else if ( method == 'del' ){
                if (int(choices_type) > 99) $(obj).parent().parent().find('.next_choice').text('交卷').attr('onclick',"javascript:xc.module.iq.submit();");

            }
        }

    // 最后答题时间 记录（在恢复 暂停答题 状态后,以最后答题时间为准）
    //window.LAST_CHOOSE_TIME = (new Date()).getTime();

    // 更新全局信息
    //xc.answer.update_info();
}

xc.module.iq.go = function(this_num){
    var STATIC = (location.origin + location.pathname).replace('index.php','') + 'public/static/';
    $($('.question')[this_num-1]).hide();
    var target = $('.line img')[this_num-1];
    if ( $(target).data('solutions') == '' ) $(target).attr('src',"/img/index/undone.png");
    else $(target).attr('src',"/img/index/done.png");

    $($('.question')[this_num]).show();
    $($('.line img')[this_num]).attr('src',"/img/index/now.png");
}


xc.module.iq.blink = function(obj,tixu){
    for (x in range($('.question').length)){
        if (  $($('.question')[x]).attr('style')  != "display:none;") $($('.question')[x]).hide();
        if (  $($('.line img')[x]).attr('src').indexOf('now.png') != -1  ){
            var solutions = $($('.line img')[x]).data('solutions');
            if (solutions != null && solutions != '') $($('.line img')[x]).attr('src',$($('.line img')[x]).attr('src').replace('now.png','done.png'));
            else if (solutions == null || solutions == '') $($('.line img')[x]).attr('src',$($('.line img')[x]).attr('src').replace('now.png','undone.png'));
        }
    }
    var STATIC = (location.origin + location.pathname).replace('index.php','') + 'public/static/';
    $($('.line img')[tixu-1]).attr('src',"/img/index/now.png");
    $($('.question')[tixu-1]).show();
}

xc.module.iq.submit = function(){
    // IQ 交卷

// 新权限验证
    if ( $('.z_user_pullDown')[0] == undefined ){
        window.dialog = {};
        window.dialog.login_msg = ('<div class="z_login"><a style=" display: block;float:right;padding:15px;" title="关闭" href="javascript:$.unblockUI();">'
                                +  '<img src="../img/index/boxCancel.png"/></a><div class="z_logincontent"><p class="z_lcaption">登录</p>'
                                +  '<div class="z_logPrompt"><img style="vertical-align:middle;margin-right:10px;" src="/img/index/presentation.png" />'
                                +  '该功能需要登录系统，请先进行登录认证</div><form action="" method="post" id="loginForm"><div class="z_inputDiv">'
                                +  '<div class="ico nameInputIco"></div>'
                                +  '<input  name="username" onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" type="text" maxlength="24" title="请输入题库帐号/教育网帐号/网校帐号"  placeholder="请输入题库帐号/教育网帐号/网校帐号" />'
                                +  '</div><div class="z_inputDiv"><div class="ico pwdInputIco"></div>'
                                +  '<input  id="test" onfocus="javascript:xc.dialog.login.focus(this);" onblur="javascript:xc.dialog.login.blur(this);" name="password" type="password"  title="请输入密码" maxlength="24" placeholder="请输入密码" />'
                                +  '</div><div class="z_Cinput"><div class="left"><input type="checkbox" id="z_checkRegister"/><label for="z_checkRegister">下次自动登录</label>'
                                +  '</div><a href="'+urllib.build('User:forget')+'"class="right">忘记密码</a><div class="clear"></div></div><div class="z_ResDiv z_logter">'
                                +  '<div class="left"><input id="loginBtn" onclick="javascript:xc.dialog.login.check(this);" tabindex="6" type="button" value="登&nbsp;&nbsp;录" />'
                                +  '</div><a class="right" onclick=\'$.blockUI({message:window.dialog.register_msg,css : {top:  ($(window).height()/2-220) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"} });\'>'
                                +  '没有帐号,立即注册</a><div class="clear"></div></div></form></div></div>');

        window.dialog.register_msg = '<div class="z_register"><a style=" display: block;float:right;padding:15px;" title="关闭" href="javascript:$.unblockUI();">'
                                + '<img src="../img/index/boxCancel.png"/></a><div class="z_logincontent"><p class="z_lcaption">注册rewrwer</p>'
                                + '<form action="" method="post"  id="registerForm" ><div class="z_inputDiv"><div class="ico mailInputIco"></div>'
                                + '<input  name="email" type="text" onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" title="请输入手机号码"  placeholder="请输入手机号码" style="background-color:white;"  maxlength="11" />'
                                + '</div><div class="z_inputDiv"><div class="ico pwdInputIco"></div>'
                                + '<input name="password"  type="password" onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" title="请输入密码（密码为6-16位的英文、数字、下划线）" style="background-color:white;" placeholder="请输入密码（密码为6-16位的英文、数字、下划线）" maxlength="24" />'
                                + '</div><div class="z_inputDiv"><div class="ico CpwdInputIco"></div>'
                                + '<input name="repassword" type="password" id="passworded" onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" title="请输入确认密码" style="background-color:white;"   placeholder="请输入确认密码" maxlength="24" />'
                                + '</div> <div class="z_inputMin"><div class="z_inputDivMin">'
                                + '<input name="verifi" type="text"  title="请输入校验码"  onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" style="background-color:white;" placeholder="请输入校验码"/>'
                                + '</div><div class="right"> <div class="right" data_c="" id="sendcode" onclick="javascript:getcode(this)">获取校验码</div>'
                                +'</div></div><div class="z_ResDiv z_regter">'
                                + '<div class="left"><input id="loginBtn" tabindex="6" type="button" value="注&nbsp;&nbsp;册" onclick="xc.answer.register();" />'
                                + '</div><a class="right" onclick=\'$.blockUI({message:window.dialog.login_msg ,css : {top:  ($(window).height()/2-220) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});\'>'
                                + '已有帐号，直接登录</a><div class="clear"></div><span class="tips"></span></div></form>  </div></div>'
        .replace('verify_img',urllib.build('User:verify',{id:'phone'}) )
        .replace('verify_img',urllib.build('User:verify',{id:'phone'}) );
        //验证码
        /*
        var $verify = $('[data-act="verify"]');
        $verify.click(function(){
            this['src'] = $(this).attr('data-src') + '&rnd=' + Math.random();
        }).trigger('click');
        */

        /*
        <div class="z_inputMin"><div class="z_inputDivMin"><div class="ico verifiIco"></div><input name="verifi" type="text"  title="请输入验证码"  onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" style="background-color:white;" placeholder="请输入验证码"/></div><div class="right"><img alt="验证码" title="换一张" data-act="verify" src="verify_img" /></div></div>
        */

        $.blockUI({message:window.dialog.login_msg,css : {top:  ($(window).height()/2-220) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}  });
        return false;
    }

    var exam_id = $('.iam_hide input[name="exam_id"]').val();
    var solutions = {};
    for ( x in range($('.line img').length)){
        var target = $('.line img')[x];
        var question_id = $(target).data('qid');
        var solution = $(target).data('solutions');
        solutions[question_id] = solution;
    }
    var paper_id = $('.iam_hide input[name="paper_id"]').val();
    var url = urllib.build('Iq:submit',{paper_id:paper_id,rnd:Math.random() });
    var post_data = {exam_id:exam_id,daan:solutions};

    var callback = function (){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data && res_data.status == 1){
                location.href = res_data.url;
            }else {
                setalert('网络繁忙，交卷失败！');
            }
        }else setalert('网络错误！');

    };
    $.post(url,post_data).always(callback);
}












// 登录 对话框

xc.dialog = {};
xc.dialog.login = {};

xc.dialog.login.error = function(obj,msg){
    $(obj).css({'background':'#fdf3f2','border':'1px #CC6666 solid'});
    if (!$(obj).parent().find('.infoAlert')[0]){
        $(obj).before('<div class="infoAlert" style="color: red;background-position: initial initial; background-repeat: initial initial;">'
            +msg
            +'</div>');
    }else{
        $(obj).parent().find('.infoAlert').html(msg);
        $(obj).parent().find('.infoAlert').show();
    }
    var now_class = $(obj).parent().find('.ico').attr('class');
    if (now_class.indexOf('hover') == -1){
        $(obj).parent().find('.ico').attr('class',
                                [now_class.split(' ')[0], now_class.split(' ')[1]+'-hover'].join(' ')
                                );
    }
}
xc.dialog.login.right = function(obj,msg){
    $(obj).css('background','white').css('border','1px #009966 solid');
    if (!$(obj).parent().find('.infoAlert')[0]){
            $(obj).before('<div class="infoAlert" style="color: red;background-position: initial initial; background-repeat: initial initial;">'
                +"<strong style=\"font-size:18px;color:green;\">√ </strong>"
                +'</div>');
    }else{
        $(obj).parent().find('.infoAlert').html("<strong style=\"font-size:18px;color:green;\">√ </strong>");
    }
    $(obj).parent().find('.infoAlert').show();
}


xc.dialog.login.focus = function(obj){
    // input in focus.
    if ($(obj).parent().find('.infoAlert')[0]){
        $(obj).parent().find('.infoAlert').hide();
        $(obj).css('background','white').css('border','1px #bababa solid');
        var now_class = $(obj).parent().find('.ico').attr('class');
        if (now_class.indexOf('hover') !== 1){
            $(obj).parent().find('.ico').attr('class',
                                    now_class.replace('-hover','')
                                    );
        }
    }
}
xc.dialog.login.blur = function(obj){
	 // lose focus(onblur)
    var pval= $('.z_register input[name="email"]').val();
    var password = $('.z_register input[name="password"]').val();
    var repassword = $('.z_register input[name="repassword"]').val();
     var code = $('.z_register input[name="verifi"]').val();
    if ($(obj).val() == ''){
        // error
        if (obj.name== 'username') msg = '请输入用户名';
        else if (obj.name== 'password') msg = '请输入密码';
        else if (obj.name== 'repassword') msg = '请重输密码';
        else if (obj.name== 'phonenum') msg = '请输入手机号';
         else if (obj.name== 'password20') msg = '请输入报名序列号';
        else if (obj.name== 'verifi') msg = '请输入验证码';
        else if (obj.name== 'email') msg = '请输入手机号码';
        else msg = " ";
        xc.dialog.login.error(obj,msg);
    }else if(obj.name== 'email'){
             if(!pval || !/^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/.test(pval)){
                msg = '请输入正确手机号码';
                xc.dialog.login.error(obj,msg);

            }else{
                   xc.dialog.login.right(obj);
            }

    }else if(obj.name== 'repassword'){
           if(password!=repassword){
               msg = '两次密码不一致';
                xc.dialog.login.error(obj,msg);
           }else{
             xc.dialog.login.right(obj);
           }
    }else if(obj.name== 'verifi'){

        $.ajax({ url:urllib.build("User/checkcode"),data:{phone:pval,code:code},type:'post',dataType:'json'}).done(function(data){
            console.log(data)
               if(data.code==1){
                    xc.dialog.login.right(obj);
               }else{
                    msg = '验证码不匹配';
                    xc.dialog.login.error(obj,msg);

               }
            })


    }else{
        // right
        xc.dialog.login.right(obj);
    }
}


xc.dialog.login.submit = function(form_obj){
    // login form submit.
    //console.log(form_obj);
}

xc.dialog.login.check = function(obj,bbbb){
    var passwd_input = $(obj).parent().parent().parent().find('input[name="password"]');
    var name_input = $(obj).parent().parent().parent().find('input[name="username"]');
    if ($(passwd_input).val() == ''  || $(name_input).val() == '' ) {
        if ($(passwd_input).val() == '') xc.dialog.login.error(passwd_input,'请输入密码');
        if ($(name_input).val() == '') xc.dialog.login.error(name_input,'请输入用户名');
        return false;
    }
    // login
    if (!bbbb) xc.answer.login();
    else xc.bbbb.login();
    //xc.dialog.login.submit($(obj).parent().parent());
}



// DOM Area.
/*
document.onready = (function(){
    //console.log('document onready');
})();
*/

document.onready = (function(){
    // Initialization javascript.
    try{
        var search = location.search.replace('?','').split('&');
        if (search.length==1 && search[0] == '') return ;
        for (x in search){
            var g = search[x].split('=');
            if (g[0] == 'mod' ||  g[0] == 'act'){
                if (g[0] == 'mod') window.location.mod = g[1].toLowerCase();
                if (g[0] == 'act') window.location.act = g[1].toLowerCase();
            }
        }
        delete x;
        // 根据 mod & act 来判断载入哪个 预加载 函数
        if (window.location.mod == 'administration' && window.location.act=="index"){
            xc.init.index();
        }else if ( window.location.pathname.indexOf('/x/') != -1 || window.location.act.indexOf('answer') != -1 ){
            //xc.answer.init();

            // 字体排齐
            $(document).ready(function(){
                $('.topic, .question .astem .right, .sub_questions .right, .choice_text li ').each(function(){
                    $(this).find('p').eq(0).css('display','inline');
                })
            })
        }
    } catch (e) {}
})();



document.onkeydown = function (e) {
    var ev = window.event || e;
    var code = ev.keyCode || ev.which;
    if (code == 116) {
        //if (window.location.mod == 'administration' && window.location.act.indexOf("answer") != -1){

        /*
        if (  window.location.pathname.indexOf('/x/') != -1 || window.location.act.indexOf("answer") != -1  ){
            ev.keyCode = 0;
            ev.returnValue = false;
            setalert('答题过程当中刷新页面会导致答题数据丢失！');
        }
        */

        /*
        // 禁止F5刷新页面
        alert('刷新将会导致该页面的数据丢失！');
        if(ev.preventDefault) {
            ev.preventDefault();
        } else {
            ev.keyCode = 0;
            ev.returnValue = false;
        }*/
    }

};



$(function(){
    // 临时！

if ( $('.flase_logreg')[0]){
        window.dialog = {};
        window.dialog.login_msg = ( '<div class="z_login"><a style=" display: block;float:right;padding:15px;" title="关闭" href="javascript:$.unblockUI();">'
                                +   '<img src="../img/index/boxCancel.png"/></a><div class="z_logincontent"><p class="z_lcaption">登录</p>'
                                +   '<form action="" method="post" id="loginForm"><div class="z_inputDiv"><div class="ico nameInputIco"></div>'
                                +   '<input  name="username" onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" type="text" maxlength="24" title="请输入题库帐号/教育网帐号/网校帐号abc"  placeholder="请输入题库帐号/教育网帐号/网校帐号" />'
                                +   '</div><div class="z_inputDiv"><div class="ico pwdInputIco"></div>'
                                +   '<input  id="test" onfocus="javascript:xc.dialog.login.focus(this);" onblur="javascript:xc.dialog.login.blur(this);" name="password" type="password"  title="请输入密码" maxlength="24" placeholder="请输入密码" />'
                                +   '</div><div class="z_Cinput"><div class="left"><input type="checkbox" id="z_checkRegister"/><label for="z_checkRegister">下次自动登录</label></div>'
                                +   '<a class="right" href="'+urllib.build('User:forget')+'">忘记密码</a><div class="clear"></div></div><div class="z_ResDiv z_logter">'
                                +   '<div class="left"><input id="loginBtn" onclick="javascript:xc.dialog.login.check(this,1);" tabindex="6" type="button" value="登&nbsp;&nbsp;录" /></div>'
                                +   '<a class="right" onclick=\'$.blockUI({message:window.dialog.register_msg,css : {top:  ($(window).height()/2-220) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"} });\'>'
                                +   '没有帐号,立即注册</a><div class="clear"></div></div></form></div></div>');

        window.dialog.register_msg = ('<div class="z_register"><a style=" display: block;float:right;padding:15px;" title="关闭" href="javascript:$.unblockUI();">'
                                + '<img src="../img/index/boxCancel.png"/></a><div class="z_logincontent"><p class="z_lcaption">注册</p><form action="" method="post"  id="registerForm" >'
                                + '<div class="z_inputDiv"><div class="ico mailInputIco"></div>'
                                + '<input  name="email" id="phone2" type="text" onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" title="请输入手机号码"  placeholder="请输入手机号码" style="background-color:white;" maxlength="11" />'
                                + '</div><div class="z_inputDiv"><div class="ico pwdInputIco"></div>'
                                + '<input name="password"  type="password" onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" title="请输入密码（密码为6-16位的英文、数字、下划线）" style="background-color:white;" placeholder="请输入密码（密码为6-16位的英文、数字、下划线）" maxlength="24" />'
                                + '</div><div class="z_inputDiv"><div class="ico CpwdInputIco"></div>'
                                + '<input name="repassword" type="password" id="passworded" onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" title="请输入确认密码" style="background-color:white;"   placeholder="请输入确认密码" maxlength="24" />'
                                + '</div> <div class="z_inputMin"><div class="z_inputDivMin">'
                                + '<input name="verifi" type="text"  title="请输入校验码"  onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" style="background-color:white;" placeholder="请输入校验码"/>'
                                + '</div><div class="right"> <div class="right" data_c="" id="sendcode" onclick="javascript:getcode(this)">获取校验码</div>'
                                + '</div></div><div class="z_ResDiv z_regter"><div class="left"><input id="loginBtn" tabindex="6" type="button" value="注&nbsp;&nbsp;册" onclick="xc.bbbb.register(0);" />'
                                + '</div><a class="right" onclick=\'$.blockUI({message:window.dialog.login_msg ,css : {top:  ($(window).height()/2-220) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}});\'>'
                                + '已有帐号，直接登录</a><div class="clear"></div><span class="tips" style="padding:0;"></span></div></form>  </div></div>')
                                    .replace('verify_img',urllib.build('User:verify',{id:'phone'}) )
                                    .replace('verify_img',urllib.build('User:verify',{id:'phone'}) );
        /*
        onclick="javascript:this.src=$(this).attr(\'data-src\')+\'&rnd=\'+Math.random();"
        var $verify = $('[data-act="verify"]');
        $verify.click(function(){
            this['src'] = $(this).attr('data-src') + '&rnd=' + Math.random();
        }).trigger('click');
        */
        /*
        <div class="z_inputMin"><div class="z_inputDivMin"><div class="ico verifiIco"></div><input name="verifi" type="text"  title="请输入验证码"  onfocus="xc.dialog.login.focus(this)" onblur="javascript:xc.dialog.login.blur(this);" style="background-color:white;" placeholder="请输入验证码"/></div><div class="right"><img alt="验证码" title="换一张" data-act="verify" src="verify_img" /></div></div>
        */
        /*
        $.blockUI({message:window.dialog.login_msg,css : {top:  ($(window).height()/2-140) + "px",left: ($(window).width()/2 -237) + "px",backgroundColor : "none",position : "fixed"}  });
        return false;
        */
    }


} )


xc.bbbb = {};
xc.bbbb.login = function(){
    var user_name = $('.z_login input[name="username"]').val();
    var password = $('.z_login input[name="password"]').val();
    var url = urllib.build('User/login_412',{'rnd':Math.random()});
    var data = urllib.urlencode({'username':user_name,'password':password});
    // 回调 1
    var callback = function(res_data){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                xc.bbbb.bbbb(res_data.uid);
                $("body").append(res_data.sync_script);
            }else{
                setalert(res_data.info || res_data.msg||'账户/密码错误');
                //$('#msgmsg1').text(res_data.info);
                //return false;
            }
        }else {
            setalert('网络错误！');
            return false;
        }
    }
    $.post(url,data).always(callback);
}

xc.bbbb.bbbb = function(user_id){
    // 更改试卷所有人信息
    var url = urllib.build('Administration:bbbb');
    var data = {user_id:user_id};
    var callback = function(){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data.status == 1){
                // User/logout
                var exit_url = urllib.build('User/logout');
                var chpw_url = urllib.build('Administration/changepw');
                var charea_url = urllib.build('Index/area');
                var user_name = res_data.user_name;
                var chnick_url = urllib.build('Index/chnick');

                var p_info = ('<div class="userInfo"><div class="user_pullDown">'
                        +  '<span  class="listShow">username</span><img src="/img/index/pullDown_ico.jpg" />'
                        +  '<ul class="userSelect"><li><a href="charea_url" >考试区域设置</a></li>'
                        +  '<li><a href="chnick_url">修改昵称</a></li>'
                        +  '<li><a href="chpw_url" >修改密码</a></li><li><a href="exit_url" >退出</a>'
                        +  '</li></ul></div></div>')
                    .replace('exit_url',exit_url)
                    .replace('chpw_url',chpw_url)
                    .replace('charea_url',charea_url)
                    .replace('chnick_url', chnick_url)
                    .replace('username',user_name);
                $('.flase_logreg').remove();
                $('.head').append(p_info);
                setalert('登录/注册 成功！');
            }else setalert('登录/注册 失败！');
        }else setalert('网络错误！');
    }
    
    $.post(url,data).always(callback);
}



//校验码
function getcode(obj){
    var _this = $(obj),locker=false,limit=60,interval='';
    
    var locker = _this.attr('data_c');
    var pval =$('.z_register input[name="email"]').val();
    console.log($(pval));
    if(!pval || !/^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/.test(pval)){
         $('.z_register .tips').text('提示：请输入手机号码！');return false;
    }

    if(locker||_this.hasClass('sending')){
        console.log(321);
         _this.html('请稍等一会再发送');return false;
    }
    _this.attr('data_c',1);
    _this.addClass('sending');
    _this.html('发送中...');
    $.ajax({ url:urllib.build("User/send_phone_check"),data:{phone:pval},type:'get',dataType:'json'}).done(function(res){
        if(res.status==1){
            interval = setInterval(function(){
                if(limit<0){
                    clearInterval(interval);
                    _this.data('locker',0).removeClass('sending').html('发送验证码');
                }else{
                    _this.html((limit--)+'s后可重新发送');
                }
            },1000);
        }else{                                  
            alert(res.info);
            _this.data('locker',0).removeClass('sending').html('发送验证码');
        }
    });      

}

xc.bbbb.register = function(){
    var url = urllib.build('User/register_412',{'rnd':Math.random()});
    
    // user name
    var phone = $('.z_register input[name="email"]').val();
    var password = $('.z_register input[name="password"]').val();
    var repassword = $('.z_register input[name="repassword"]').val();
    var verify_code = $('.z_register input[name="verifi"]').val();
    if (password != repassword) {
        $('.z_register .tips').text('提示：两次密码不一致！');
        return false;
    }
    if (password == '' || password == null ){
        $('.z_register .tips').text('提示：请输入密码');
        return false;
    }
    if ( phone == '' || phone == null  ){
        $('.z_register .tips').text('提示：请输入手机号码！');
        return false;
    }
    
    var data = {username:phone, password:password, repassword:repassword, verify:verify_code};
    // 回调 1
    var callback = function(res_data){
        if (arguments[2].status == 200){
            var res_data = arguments[0];
            if (res_data && res_data.status ==1){
                // chanage exam's uid.
                $("body").append(res_data.sync_script);
                xc.bbbb.bbbb(res_data.uid);
            }else $('.z_register .tips').text('提示：'+res_data.info);
        }else $('.z_register .tips').text('提示：网络错误！'); 
    };

    $.post(url,data).always(callback);
    
}
//获取收藏的题目并渲染到模板
xc.module.favorite = function () {
	var url = urllib.build('Widget/my_favorite',{'rnd':Math.random()});
	$.post(url,{},function (response) {

		if(response.status) {
			var qids = response.qids;

			if(qids.length > 0) {
				$('div.answer div.answerCenter').each(function () {
					var _this = $(this);

					if(_this.attr('index') !== undefined) {
						var id = _this.data('id');

						if($.inArray(id,qids) == -1) {
							_this.find('.addCollect').html('<a class="addCollect" onclick="question_favorite('+id+',this);">收藏本题</a>');
						} else {
							_this.find('.addCollect').html('<a class="collectActive" onclick="question_favorite('+id+',this);">取消收藏</a>');
						}
					}
				})
			}
		}
	})
}